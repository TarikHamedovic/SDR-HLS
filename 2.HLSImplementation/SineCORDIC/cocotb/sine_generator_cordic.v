/* Generated by Yosys 0.42+40 (git sha1 a739e21a5, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:103" *)
(* generator = "Amaranth" *)
module top(i_xval, i_yval, i_phase, o_phval, clk, rst, xv0, yv0, ph0, xv1, yv1, ph1, xv2, yv2, ph2, xv3, yv3, ph3, xv4, yv4, ph4
, xv5, yv5, ph5, xv6, yv6, ph6, xv7, yv7, ph7, xv8, yv8, ph8, xv9, yv9, ph9, xv10, yv10, ph10, xv11, yv11, ph11
, xv12, yv12, ph12, xv13, yv13, ph13, xv14, yv14, ph14, xv15, yv15, ph15, xv16, yv16, ph16, o_xval, o_yval, pre_xval, pre_yval, e_xval, e_yval
, i_reset);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [16:0] \$1 ;
  wire [20:0] \$10 ;
  wire [15:0] \$100 ;
  wire [16:0] \$101 ;
  wire [20:0] \$102 ;
  wire \$103 ;
  wire [15:0] \$104 ;
  wire [16:0] \$105 ;
  wire [15:0] \$106 ;
  wire [16:0] \$107 ;
  wire [20:0] \$108 ;
  wire [15:0] \$109 ;
  wire [16:0] \$11 ;
  wire [16:0] \$110 ;
  wire [15:0] \$111 ;
  wire [16:0] \$112 ;
  wire [20:0] \$113 ;
  wire \$114 ;
  wire [15:0] \$115 ;
  wire [16:0] \$116 ;
  wire [15:0] \$117 ;
  wire [16:0] \$118 ;
  wire [20:0] \$119 ;
  wire [20:0] \$12 ;
  wire [15:0] \$120 ;
  wire [16:0] \$121 ;
  wire [15:0] \$122 ;
  wire [16:0] \$123 ;
  wire [20:0] \$124 ;
  wire \$125 ;
  wire [15:0] \$126 ;
  wire [16:0] \$127 ;
  wire [15:0] \$128 ;
  wire [16:0] \$129 ;
  wire [16:0] \$13 ;
  wire [20:0] \$130 ;
  wire [15:0] \$131 ;
  wire [16:0] \$132 ;
  wire [15:0] \$133 ;
  wire [16:0] \$134 ;
  wire [20:0] \$135 ;
  wire \$136 ;
  wire [15:0] \$137 ;
  wire [16:0] \$138 ;
  wire [15:0] \$139 ;
  wire [20:0] \$14 ;
  wire [16:0] \$140 ;
  wire [20:0] \$141 ;
  wire [15:0] \$142 ;
  wire [16:0] \$143 ;
  wire [15:0] \$144 ;
  wire [16:0] \$145 ;
  wire [20:0] \$146 ;
  wire \$147 ;
  wire [15:0] \$148 ;
  wire [16:0] \$149 ;
  wire \$15 ;
  wire [15:0] \$150 ;
  wire [16:0] \$151 ;
  wire [20:0] \$152 ;
  wire [15:0] \$153 ;
  wire [16:0] \$154 ;
  wire [15:0] \$155 ;
  wire [16:0] \$156 ;
  wire [20:0] \$157 ;
  wire \$158 ;
  wire [15:0] \$159 ;
  wire [15:0] \$16 ;
  wire [16:0] \$160 ;
  wire [15:0] \$161 ;
  wire [16:0] \$162 ;
  wire [20:0] \$163 ;
  wire [15:0] \$164 ;
  wire [16:0] \$165 ;
  wire [15:0] \$166 ;
  wire [16:0] \$167 ;
  wire [20:0] \$168 ;
  wire \$169 ;
  wire [16:0] \$17 ;
  wire [15:0] \$170 ;
  wire [16:0] \$171 ;
  wire [15:0] \$172 ;
  wire [16:0] \$173 ;
  wire [20:0] \$174 ;
  wire [15:0] \$175 ;
  wire [16:0] \$176 ;
  wire [15:0] \$177 ;
  wire [16:0] \$178 ;
  wire [20:0] \$179 ;
  wire [15:0] \$18 ;
  wire \$180 ;
  wire [15:0] \$181 ;
  wire [16:0] \$182 ;
  wire [15:0] \$183 ;
  wire [16:0] \$184 ;
  wire [20:0] \$185 ;
  wire [15:0] \$186 ;
  wire [16:0] \$187 ;
  wire [15:0] \$188 ;
  wire [16:0] \$189 ;
  wire [16:0] \$19 ;
  wire [20:0] \$190 ;
  wire \$191 ;
  wire \$192 ;
  wire [17:0] \$193 ;
  wire \$194 ;
  wire \$195 ;
  wire [17:0] \$196 ;
  wire [15:0] \$197 ;
  wire [15:0] \$198 ;
  reg [12:0] \$199 ;
  wire [20:0] \$2 ;
  wire [20:0] \$20 ;
  reg [12:0] \$200 ;
  wire [15:0] \$21 ;
  wire [16:0] \$22 ;
  wire [15:0] \$23 ;
  wire [16:0] \$24 ;
  wire [20:0] \$25 ;
  wire \$26 ;
  wire [15:0] \$27 ;
  wire [16:0] \$28 ;
  wire [15:0] \$29 ;
  wire [16:0] \$3 ;
  wire [16:0] \$30 ;
  wire [20:0] \$31 ;
  wire [15:0] \$32 ;
  wire [16:0] \$33 ;
  wire [15:0] \$34 ;
  wire [16:0] \$35 ;
  wire [20:0] \$36 ;
  wire \$37 ;
  wire [15:0] \$38 ;
  wire [16:0] \$39 ;
  wire [20:0] \$4 ;
  wire [15:0] \$40 ;
  wire [16:0] \$41 ;
  wire [20:0] \$42 ;
  wire [15:0] \$43 ;
  wire [16:0] \$44 ;
  wire [15:0] \$45 ;
  wire [16:0] \$46 ;
  wire [20:0] \$47 ;
  wire \$48 ;
  wire [15:0] \$49 ;
  wire [16:0] \$5 ;
  wire [16:0] \$50 ;
  wire [15:0] \$51 ;
  wire [16:0] \$52 ;
  wire [20:0] \$53 ;
  wire [15:0] \$54 ;
  wire [16:0] \$55 ;
  wire [15:0] \$56 ;
  wire [16:0] \$57 ;
  wire [20:0] \$58 ;
  wire \$59 ;
  wire [16:0] \$6 ;
  wire [15:0] \$60 ;
  wire [16:0] \$61 ;
  wire [15:0] \$62 ;
  wire [16:0] \$63 ;
  wire [20:0] \$64 ;
  wire [15:0] \$65 ;
  wire [16:0] \$66 ;
  wire [15:0] \$67 ;
  wire [16:0] \$68 ;
  wire [20:0] \$69 ;
  wire [20:0] \$7 ;
  wire \$70 ;
  wire [15:0] \$71 ;
  wire [16:0] \$72 ;
  wire [15:0] \$73 ;
  wire [16:0] \$74 ;
  wire [20:0] \$75 ;
  wire [15:0] \$76 ;
  wire [16:0] \$77 ;
  wire [15:0] \$78 ;
  wire [16:0] \$79 ;
  wire [16:0] \$8 ;
  wire [20:0] \$80 ;
  wire \$81 ;
  wire [15:0] \$82 ;
  wire [16:0] \$83 ;
  wire [15:0] \$84 ;
  wire [16:0] \$85 ;
  wire [20:0] \$86 ;
  wire [15:0] \$87 ;
  wire [16:0] \$88 ;
  wire [15:0] \$89 ;
  wire [16:0] \$9 ;
  wire [16:0] \$90 ;
  wire [20:0] \$91 ;
  wire \$92 ;
  wire [15:0] \$93 ;
  wire [16:0] \$94 ;
  wire [15:0] \$95 ;
  wire [16:0] \$96 ;
  wire [20:0] \$97 ;
  wire [15:0] \$98 ;
  wire [16:0] \$99 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$100 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$101 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$102 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$103 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$104 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$105 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$106 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$107 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$108 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$109 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$110 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$111 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$112 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$113 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$114 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$65 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$66 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$67 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$68 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$69 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$70 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$71 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$72 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$73 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$74 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$75 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$76 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$77 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$78 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$79 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$80 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$81 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$82 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$83 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$84 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$85 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$86 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$87 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$88 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$89 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$90 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$91 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$92 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$93 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$94 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$95 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$96 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  wire [15:0] \$signal$97 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$98 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  wire [19:0] \$signal$99 ;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:97" *)
  output [15:0] e_xval;
  wire [15:0] e_xval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:98" *)
  output [15:0] e_yval;
  wire [15:0] e_yval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:36" *)
  input [19:0] i_phase;
  wire [19:0] i_phase;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:33" *)
  input i_reset;
  wire i_reset;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:34" *)
  input [12:0] i_xval;
  wire [12:0] i_xval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:35" *)
  input [12:0] i_yval;
  wire [12:0] i_yval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:41" *)
  input [19:0] o_phval;
  wire [19:0] o_phval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:39" *)
  output [12:0] o_xval;
  reg [12:0] o_xval = 13'h0000;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:40" *)
  output [12:0] o_yval;
  reg [12:0] o_yval = 13'h0000;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph0;
  reg [19:0] ph0;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph1;
  reg [19:0] ph1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph10;
  reg [19:0] ph10;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph11;
  reg [19:0] ph11;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph12;
  reg [19:0] ph12;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph13;
  reg [19:0] ph13;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph14;
  reg [19:0] ph14;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph15;
  reg [19:0] ph15;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph16;
  reg [19:0] ph16;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph2;
  reg [19:0] ph2;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph3;
  reg [19:0] ph3;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph4;
  reg [19:0] ph4;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph5;
  reg [19:0] ph5;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph6;
  reg [19:0] ph6;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph7;
  reg [19:0] ph7;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph8;
  reg [19:0] ph8;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:114" *)
  output [19:0] ph9;
  reg [19:0] ph9;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:99" *)
  output [15:0] pre_xval;
  wire [15:0] pre_xval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:100" *)
  output [15:0] pre_yval;
  wire [15:0] pre_yval;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv0;
  reg [15:0] xv0;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv1;
  reg [15:0] xv1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv10;
  reg [15:0] xv10;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv11;
  reg [15:0] xv11;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv12;
  reg [15:0] xv12;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv13;
  reg [15:0] xv13;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv14;
  reg [15:0] xv14;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv15;
  reg [15:0] xv15;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv16;
  reg [15:0] xv16;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv2;
  reg [15:0] xv2;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv3;
  reg [15:0] xv3;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv4;
  reg [15:0] xv4;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv5;
  reg [15:0] xv5;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv6;
  reg [15:0] xv6;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv7;
  reg [15:0] xv7;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv8;
  reg [15:0] xv8;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:108" *)
  output [15:0] xv9;
  reg [15:0] xv9;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv0;
  reg [15:0] yv0;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv1;
  wire [15:0] yv1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv10;
  wire [15:0] yv10;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv11;
  wire [15:0] yv11;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv12;
  wire [15:0] yv12;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv13;
  wire [15:0] yv13;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv14;
  wire [15:0] yv14;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv15;
  wire [15:0] yv15;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv16;
  wire [15:0] yv16;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv2;
  wire [15:0] yv2;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv3;
  wire [15:0] yv3;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv4;
  wire [15:0] yv4;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv5;
  wire [15:0] yv5;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv6;
  wire [15:0] yv6;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv7;
  wire [15:0] yv7;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv8;
  wire [15:0] yv8;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] yv9;
  wire [15:0] yv9;
  assign \$1  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:157" *) { i_yval, 2'h0 };
  assign \$2  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:159" *) 19'h40000;
  assign \$3  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:163" *) { i_yval, 2'h0 };
  assign \$4  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:165" *) 20'h80000;
  assign \$5  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:169" *) { i_xval, 2'h0 };
  assign \$6  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:170" *) { i_yval, 2'h0 };
  assign \$7  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:171" *) 20'h80000;
  assign \$8  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:175" *) { i_xval, 2'h0 };
  assign \$9  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:176" *) { i_yval, 2'h0 };
  assign \$10  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:177" *) 20'h80000;
  assign \$11  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:182" *) { i_xval, 2'h0 };
  assign \$12  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:183" *) 20'hc0000;
  assign \$13  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:188" *) { i_xval, 2'h0 };
  assign \$14  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:189" *) 20'hc0000;
  assign \$17  = $signed(xv0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(\$16 );
  assign \$19  = $signed(yv0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$18 );
  assign \$20  = ph0 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 17'h12e40;
  assign \$22  = $signed(xv0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(\$21 );
  assign \$24  = $signed(yv0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$23 );
  assign \$25  = ph0 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 17'h12e40;
  assign \$28  = $signed(xv1) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$30  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$29 );
  assign \$31  = ph1 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 16'h9fb3;
  assign \$33  = $signed(xv1) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$35  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$34 );
  assign \$36  = ph1 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 16'h9fb3;
  assign \$39  = $signed(xv2) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$41  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$40 );
  assign \$42  = ph2 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 15'h5111;
  assign \$44  = $signed(xv2) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$46  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$45 );
  assign \$47  = ph2 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 15'h5111;
  assign \$50  = $signed(xv3) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$52  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$51 );
  assign \$53  = ph3 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 14'h28b0;
  assign \$55  = $signed(xv3) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$57  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$56 );
  assign \$58  = ph3 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 14'h28b0;
  assign \$61  = $signed(xv4) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$63  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$62 );
  assign \$64  = ph4 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 13'h145d;
  assign \$66  = $signed(xv4) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$68  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$67 );
  assign \$69  = ph4 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 13'h145d;
  assign \$72  = $signed(xv5) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$74  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$73 );
  assign \$75  = ph5 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 12'ha2f;
  assign \$77  = $signed(xv5) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$79  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$78 );
  assign \$80  = ph5 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 12'ha2f;
  assign \$83  = $signed(xv6) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$85  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$84 );
  assign \$86  = ph6 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 11'h517;
  assign \$88  = $signed(xv6) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$90  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$89 );
  assign \$91  = ph6 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 11'h517;
  assign \$94  = $signed(xv7) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$96  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$95 );
  assign \$97  = ph7 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 10'h28b;
  assign \$99  = $signed(xv7) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$101  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$100 );
  assign \$102  = ph7 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 10'h28b;
  assign \$105  = $signed(xv8) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$107  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$106 );
  assign \$108  = ph8 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 9'h145;
  assign \$110  = $signed(xv8) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$112  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$111 );
  assign \$113  = ph8 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 9'h145;
  assign \$116  = $signed(xv9) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$118  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$117 );
  assign \$119  = ph9 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 8'ha2;
  assign \$121  = $signed(xv9) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$123  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$122 );
  assign \$124  = ph9 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 8'ha2;
  assign \$127  = $signed(xv10) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$129  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$128 );
  assign \$130  = ph10 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 7'h51;
  assign \$132  = $signed(xv10) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$134  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$133 );
  assign \$135  = ph10 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 7'h51;
  assign \$138  = $signed(xv11) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$140  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$139 );
  assign \$141  = ph11 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 6'h28;
  assign \$143  = $signed(xv11) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$145  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$144 );
  assign \$146  = ph11 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 6'h28;
  assign \$149  = $signed(xv12) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$151  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$150 );
  assign \$152  = ph12 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 5'h14;
  assign \$154  = $signed(xv12) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$156  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$155 );
  assign \$157  = ph12 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 5'h14;
  assign \$160  = $signed(xv13) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$162  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$161 );
  assign \$163  = ph13 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 4'ha;
  assign \$165  = $signed(xv13) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$167  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$166 );
  assign \$168  = ph13 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 4'ha;
  assign \$171  = $signed(xv14) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$173  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$172 );
  assign \$174  = ph14 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 3'h5;
  assign \$176  = $signed(xv14) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$178  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$177 );
  assign \$179  = ph14 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 3'h5;
  assign \$182  = $signed(xv15) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:223" *) $signed(16'h0000);
  assign \$184  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:224" *) $signed(\$183 );
  assign \$185  = ph15 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:225" *) 2'h2;
  assign \$187  = $signed(xv15) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:230" *) $signed(16'h0000);
  assign \$189  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:231" *) $signed(\$188 );
  assign \$190  = ph15 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:232" *) 2'h2;
  assign \$191  = ~ (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) xv16[3];
  assign \$192  = ~ (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) xv16[3];
  assign \$193  = $signed(xv16) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:238" *) $signed({ 1'h0, xv16[3], \$192 , \$191  });
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:39" *)
  always @(posedge clk)
    o_xval <= \$199 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:40" *)
  always @(posedge clk)
    o_yval <= \$200 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (i_phase[19:17])
      3'h0:
          xv0 = { 1'h0, i_xval, 2'h0 };
      3'h1:
          xv0 = \$1 [15:0];
      3'h2:
          xv0 = \$3 [15:0];
      3'h3:
          xv0 = \$5 [15:0];
      3'h4:
          xv0 = \$8 [15:0];
      3'h5:
          xv0 = { 1'h0, i_yval, 2'h0 };
      3'h6:
          xv0 = { 1'h0, i_yval, 2'h0 };
      3'h7:
          xv0 = { 1'h0, i_xval, 2'h0 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (i_phase[19:17])
      3'h0:
          yv0 = { 1'h0, i_xval, 2'h0 };
      3'h1:
          yv0 = { 1'h0, i_xval, 2'h0 };
      3'h2:
          yv0 = { 1'h0, i_xval, 2'h0 };
      3'h3:
          yv0 = \$6 [15:0];
      3'h4:
          yv0 = \$9 [15:0];
      3'h5:
          yv0 = \$11 [15:0];
      3'h6:
          yv0 = \$13 [15:0];
      3'h7:
          yv0 = { 1'h0, i_yval, 2'h0 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (i_phase[19:17])
      3'h0:
          ph0 = i_phase;
      3'h1:
          ph0 = \$2 [19:0];
      3'h2:
          ph0 = \$4 [19:0];
      3'h3:
          ph0 = \$7 [19:0];
      3'h4:
          ph0 = \$10 [19:0];
      3'h5:
          ph0 = \$12 [19:0];
      3'h6:
          ph0 = \$14 [19:0];
      3'h7:
          ph0 = i_phase;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$15 , 1'h0 })
      2'b1?:
          xv1 = \$19 [15:0];
      default:
          xv1 = \$24 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$15 , 1'h0 })
      2'b1?:
          ph1 = \$20 [19:0];
      default:
          ph1 = \$25 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$26 , 1'h0 })
      2'b1?:
          xv2 = \$30 [15:0];
      default:
          xv2 = \$35 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$26 , 1'h0 })
      2'b1?:
          ph2 = \$31 [19:0];
      default:
          ph2 = \$36 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$37 , 1'h0 })
      2'b1?:
          xv3 = \$41 [15:0];
      default:
          xv3 = \$46 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$37 , 1'h0 })
      2'b1?:
          ph3 = \$42 [19:0];
      default:
          ph3 = \$47 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$48 , 1'h0 })
      2'b1?:
          xv4 = \$52 [15:0];
      default:
          xv4 = \$57 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$48 , 1'h0 })
      2'b1?:
          ph4 = \$53 [19:0];
      default:
          ph4 = \$58 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$59 , 1'h0 })
      2'b1?:
          xv5 = \$63 [15:0];
      default:
          xv5 = \$68 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$59 , 1'h0 })
      2'b1?:
          ph5 = \$64 [19:0];
      default:
          ph5 = \$69 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$70 , 1'h0 })
      2'b1?:
          xv6 = \$74 [15:0];
      default:
          xv6 = \$79 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$70 , 1'h0 })
      2'b1?:
          ph6 = \$75 [19:0];
      default:
          ph6 = \$80 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$81 , 1'h0 })
      2'b1?:
          xv7 = \$85 [15:0];
      default:
          xv7 = \$90 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$81 , 1'h0 })
      2'b1?:
          ph7 = \$86 [19:0];
      default:
          ph7 = \$91 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$92 , 1'h0 })
      2'b1?:
          xv8 = \$96 [15:0];
      default:
          xv8 = \$101 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$92 , 1'h0 })
      2'b1?:
          ph8 = \$97 [19:0];
      default:
          ph8 = \$102 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$103 , 1'h0 })
      2'b1?:
          xv9 = \$107 [15:0];
      default:
          xv9 = \$112 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$103 , 1'h0 })
      2'b1?:
          ph9 = \$108 [19:0];
      default:
          ph9 = \$113 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$114 , 1'h0 })
      2'b1?:
          xv10 = \$118 [15:0];
      default:
          xv10 = \$123 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$114 , 1'h0 })
      2'b1?:
          ph10 = \$119 [19:0];
      default:
          ph10 = \$124 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$125 , 1'h0 })
      2'b1?:
          xv11 = \$129 [15:0];
      default:
          xv11 = \$134 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$125 , 1'h0 })
      2'b1?:
          ph11 = \$130 [19:0];
      default:
          ph11 = \$135 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$136 , 1'h0 })
      2'b1?:
          xv12 = \$140 [15:0];
      default:
          xv12 = \$145 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$136 , 1'h0 })
      2'b1?:
          ph12 = \$141 [19:0];
      default:
          ph12 = \$146 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$147 , 1'h0 })
      2'b1?:
          xv13 = \$151 [15:0];
      default:
          xv13 = \$156 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$147 , 1'h0 })
      2'b1?:
          ph13 = \$152 [19:0];
      default:
          ph13 = \$157 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$158 , 1'h0 })
      2'b1?:
          xv14 = \$162 [15:0];
      default:
          xv14 = \$167 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$158 , 1'h0 })
      2'b1?:
          ph14 = \$163 [19:0];
      default:
          ph14 = \$168 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$169 , 1'h0 })
      2'b1?:
          xv15 = \$173 [15:0];
      default:
          xv15 = \$178 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$169 , 1'h0 })
      2'b1?:
          ph15 = \$174 [19:0];
      default:
          ph15 = \$179 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$180 , 1'h0 })
      2'b1?:
          xv16 = \$184 [15:0];
      default:
          xv16 = \$189 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$180 , 1'h0 })
      2'b1?:
          ph16 = \$185 [19:0];
      default:
          ph16 = \$190 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (i_reset) begin
      \$199  = 13'h0000;
    end else begin
      \$199  = \$197 [12:0];
    end
    if (rst) begin
      \$199  = 13'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (i_reset) begin
      \$200  = 13'h0000;
    end else begin
      \$200  = \$198 [12:0];
    end
    if (rst) begin
      \$200  = 13'h0000;
    end
  end
  assign \$signal  = xv0;
  assign \$signal$65  = yv0;
  assign \$signal$66  = ph0;
  assign \$signal$67  = xv1;
  assign \$signal$68  = 16'h0000;
  assign \$signal$69  = ph1;
  assign \$signal$70  = xv2;
  assign \$signal$71  = 16'h0000;
  assign \$signal$72  = ph2;
  assign \$signal$73  = xv3;
  assign \$signal$74  = 16'h0000;
  assign \$signal$75  = ph3;
  assign \$signal$76  = xv4;
  assign \$signal$77  = 16'h0000;
  assign \$signal$78  = ph4;
  assign \$signal$79  = xv5;
  assign \$signal$80  = 16'h0000;
  assign \$signal$81  = ph5;
  assign \$signal$82  = xv6;
  assign \$signal$83  = 16'h0000;
  assign \$signal$84  = ph6;
  assign \$signal$85  = xv7;
  assign \$signal$86  = 16'h0000;
  assign \$signal$87  = ph7;
  assign \$signal$88  = xv8;
  assign \$signal$89  = 16'h0000;
  assign \$signal$90  = ph8;
  assign \$signal$91  = xv9;
  assign \$signal$92  = 16'h0000;
  assign \$signal$93  = ph9;
  assign \$signal$94  = xv10;
  assign \$signal$95  = 16'h0000;
  assign \$signal$96  = ph10;
  assign \$signal$97  = xv11;
  assign \$signal$98  = 16'h0000;
  assign \$signal$99  = ph11;
  assign \$signal$100  = xv12;
  assign \$signal$101  = 16'h0000;
  assign \$signal$102  = ph12;
  assign \$signal$103  = xv13;
  assign \$signal$104  = 16'h0000;
  assign \$signal$105  = ph13;
  assign \$signal$106  = xv14;
  assign \$signal$107  = 16'h0000;
  assign \$signal$108  = ph14;
  assign \$signal$109  = xv15;
  assign \$signal$110  = 16'h0000;
  assign \$signal$111  = ph15;
  assign \$signal$112  = xv16;
  assign \$signal$113  = 16'h0000;
  assign \$signal$114  = ph16;
  assign yv1 = 16'h0000;
  assign yv2 = 16'h0000;
  assign yv3 = 16'h0000;
  assign yv4 = 16'h0000;
  assign yv5 = 16'h0000;
  assign yv6 = 16'h0000;
  assign yv7 = 16'h0000;
  assign yv8 = 16'h0000;
  assign yv9 = 16'h0000;
  assign yv10 = 16'h0000;
  assign yv11 = 16'h0000;
  assign yv12 = 16'h0000;
  assign yv13 = 16'h0000;
  assign yv14 = 16'h0000;
  assign yv15 = 16'h0000;
  assign yv16 = 16'h0000;
  assign pre_xval = \$193 [15:0];
  assign pre_yval = \$196 [15:0];
  assign e_xval = { 1'h0, i_xval, 2'h0 };
  assign e_yval = { 1'h0, i_yval, 2'h0 };
  assign \$15  = ph0[19];
  assign \$16  = { yv0[15], yv0[15:1] };
  assign \$18  = { xv0[15], xv0[15:1] };
  assign \$21  = { yv0[15], yv0[15:1] };
  assign \$23  = { xv0[15], xv0[15:1] };
  assign \$26  = ph1[19];
  assign \$27  = 16'h0000;
  assign \$29  = { xv1[15], xv1[15], xv1[15:2] };
  assign \$32  = 16'h0000;
  assign \$34  = { xv1[15], xv1[15], xv1[15:2] };
  assign \$37  = ph2[19];
  assign \$38  = 16'h0000;
  assign \$40  = { xv2[15], xv2[15], xv2[15], xv2[15:3] };
  assign \$43  = 16'h0000;
  assign \$45  = { xv2[15], xv2[15], xv2[15], xv2[15:3] };
  assign \$48  = ph3[19];
  assign \$49  = 16'h0000;
  assign \$51  = { xv3[15], xv3[15], xv3[15], xv3[15], xv3[15:4] };
  assign \$54  = 16'h0000;
  assign \$56  = { xv3[15], xv3[15], xv3[15], xv3[15], xv3[15:4] };
  assign \$59  = ph4[19];
  assign \$60  = 16'h0000;
  assign \$62  = { xv4[15], xv4[15], xv4[15], xv4[15], xv4[15], xv4[15:5] };
  assign \$65  = 16'h0000;
  assign \$67  = { xv4[15], xv4[15], xv4[15], xv4[15], xv4[15], xv4[15:5] };
  assign \$70  = ph5[19];
  assign \$71  = 16'h0000;
  assign \$73  = { xv5[15], xv5[15], xv5[15], xv5[15], xv5[15], xv5[15], xv5[15:6] };
  assign \$76  = 16'h0000;
  assign \$78  = { xv5[15], xv5[15], xv5[15], xv5[15], xv5[15], xv5[15], xv5[15:6] };
  assign \$81  = ph6[19];
  assign \$82  = 16'h0000;
  assign \$84  = { xv6[15], xv6[15], xv6[15], xv6[15], xv6[15], xv6[15], xv6[15], xv6[15:7] };
  assign \$87  = 16'h0000;
  assign \$89  = { xv6[15], xv6[15], xv6[15], xv6[15], xv6[15], xv6[15], xv6[15], xv6[15:7] };
  assign \$92  = ph7[19];
  assign \$93  = 16'h0000;
  assign \$95  = { xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15:8] };
  assign \$98  = 16'h0000;
  assign \$100  = { xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15], xv7[15:8] };
  assign \$103  = ph8[19];
  assign \$104  = 16'h0000;
  assign \$106  = { xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15:9] };
  assign \$109  = 16'h0000;
  assign \$111  = { xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15], xv8[15:9] };
  assign \$114  = ph9[19];
  assign \$115  = 16'h0000;
  assign \$117  = { xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15:10] };
  assign \$120  = 16'h0000;
  assign \$122  = { xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15], xv9[15:10] };
  assign \$125  = ph10[19];
  assign \$126  = 16'h0000;
  assign \$128  = { xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15:11] };
  assign \$131  = 16'h0000;
  assign \$133  = { xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15], xv10[15:11] };
  assign \$136  = ph11[19];
  assign \$137  = 16'h0000;
  assign \$139  = { xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15:12] };
  assign \$142  = 16'h0000;
  assign \$144  = { xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15], xv11[15:12] };
  assign \$147  = ph12[19];
  assign \$148  = 16'h0000;
  assign \$150  = { xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15:13] };
  assign \$153  = 16'h0000;
  assign \$155  = { xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15], xv12[15:13] };
  assign \$158  = ph13[19];
  assign \$159  = 16'h0000;
  assign \$161  = { xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15:14] };
  assign \$164  = 16'h0000;
  assign \$166  = { xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15], xv13[15:14] };
  assign \$169  = ph14[19];
  assign \$170  = 16'h0000;
  assign \$172  = { xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15] };
  assign \$175  = 16'h0000;
  assign \$177  = { xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15], xv14[15] };
  assign \$180  = ph15[19];
  assign \$181  = 16'h0000;
  assign \$183  = { xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15] };
  assign \$186  = 16'h0000;
  assign \$188  = { xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15], xv15[15] };
  assign \$194  = 1'h1;
  assign \$195  = 1'h1;
  assign \$196  = 18'h00003;
  assign \$197  = { 3'h0, \$193 [15:3] };
  assign \$198  = 16'h0000;
endmodule
