/* Generated by Yosys 0.42+40 (git sha1 a739e21a5, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:104" *)
(* generator = "Amaranth" *)
module top(i_xval, i_yval, i_phase, o_phval, clk, rst, xv0, yv0, ph0, xv1, yv1, ph1, xv2, yv2, ph2, xv3, yv3, ph3, xv4, yv4, ph4
, xv5, yv5, ph5, xv6, yv6, ph6, xv7, yv7, ph7, xv8, yv8, ph8, xv9, yv9, ph9, xv10, yv10, ph10, xv11, yv11, ph11
, xv12, yv12, ph12, xv13, yv13, ph13, xv14, yv14, ph14, xv15, yv15, ph15, xv16, yv16, ph16, o_xval, o_yval, pre_xval, pre_yval, e_xval, e_yval
, i_reset);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [16:0] \$1 ;
  wire [20:0] \$10 ;
  wire [16:0] \$100 ;
  wire [16:0] \$101 ;
  wire [20:0] \$102 ;
  wire [16:0] \$103 ;
  wire [16:0] \$104 ;
  wire [20:0] \$105 ;
  wire \$106 ;
  wire [16:0] \$107 ;
  wire [16:0] \$108 ;
  wire [20:0] \$109 ;
  wire [16:0] \$11 ;
  wire [16:0] \$110 ;
  wire [16:0] \$111 ;
  wire [20:0] \$112 ;
  wire \$113 ;
  wire [16:0] \$114 ;
  wire [16:0] \$115 ;
  wire [20:0] \$116 ;
  wire [16:0] \$117 ;
  wire [16:0] \$118 ;
  wire [20:0] \$119 ;
  wire [20:0] \$12 ;
  wire \$120 ;
  wire [16:0] \$121 ;
  wire [16:0] \$122 ;
  wire [20:0] \$123 ;
  wire [16:0] \$124 ;
  wire [16:0] \$125 ;
  wire [20:0] \$126 ;
  wire \$127 ;
  wire \$128 ;
  wire [17:0] \$129 ;
  wire [16:0] \$13 ;
  wire \$130 ;
  wire \$131 ;
  wire [17:0] \$132 ;
  wire [15:0] \$133 ;
  wire [15:0] \$134 ;
  reg [12:0] \$135 ;
  reg [12:0] \$136 ;
  wire [20:0] \$14 ;
  wire \$15 ;
  wire [16:0] \$16 ;
  wire [16:0] \$17 ;
  wire [20:0] \$18 ;
  wire [16:0] \$19 ;
  wire [20:0] \$2 ;
  wire [16:0] \$20 ;
  wire [20:0] \$21 ;
  wire \$22 ;
  wire [16:0] \$23 ;
  wire [16:0] \$24 ;
  wire [20:0] \$25 ;
  wire [16:0] \$26 ;
  wire [16:0] \$27 ;
  wire [20:0] \$28 ;
  wire \$29 ;
  wire [16:0] \$3 ;
  wire [16:0] \$30 ;
  wire [16:0] \$31 ;
  wire [20:0] \$32 ;
  wire [16:0] \$33 ;
  wire [16:0] \$34 ;
  wire [20:0] \$35 ;
  wire \$36 ;
  wire [16:0] \$37 ;
  wire [16:0] \$38 ;
  wire [20:0] \$39 ;
  wire [20:0] \$4 ;
  wire [16:0] \$40 ;
  wire [16:0] \$41 ;
  wire [20:0] \$42 ;
  wire \$43 ;
  wire [16:0] \$44 ;
  wire [16:0] \$45 ;
  wire [20:0] \$46 ;
  wire [16:0] \$47 ;
  wire [16:0] \$48 ;
  wire [20:0] \$49 ;
  wire [16:0] \$5 ;
  wire \$50 ;
  wire [16:0] \$51 ;
  wire [16:0] \$52 ;
  wire [20:0] \$53 ;
  wire [16:0] \$54 ;
  wire [16:0] \$55 ;
  wire [20:0] \$56 ;
  wire \$57 ;
  wire [16:0] \$58 ;
  wire [16:0] \$59 ;
  wire [16:0] \$6 ;
  wire [20:0] \$60 ;
  wire [16:0] \$61 ;
  wire [16:0] \$62 ;
  wire [20:0] \$63 ;
  wire \$64 ;
  wire [16:0] \$65 ;
  wire [16:0] \$66 ;
  wire [20:0] \$67 ;
  wire [16:0] \$68 ;
  wire [16:0] \$69 ;
  wire [20:0] \$7 ;
  wire [20:0] \$70 ;
  wire \$71 ;
  wire [16:0] \$72 ;
  wire [16:0] \$73 ;
  wire [20:0] \$74 ;
  wire [16:0] \$75 ;
  wire [16:0] \$76 ;
  wire [20:0] \$77 ;
  wire \$78 ;
  wire [16:0] \$79 ;
  wire [16:0] \$8 ;
  wire [16:0] \$80 ;
  wire [20:0] \$81 ;
  wire [16:0] \$82 ;
  wire [16:0] \$83 ;
  wire [20:0] \$84 ;
  wire \$85 ;
  wire [16:0] \$86 ;
  wire [16:0] \$87 ;
  wire [20:0] \$88 ;
  wire [16:0] \$89 ;
  wire [16:0] \$9 ;
  wire [16:0] \$90 ;
  wire [20:0] \$91 ;
  wire \$92 ;
  wire [16:0] \$93 ;
  wire [16:0] \$94 ;
  wire [20:0] \$95 ;
  wire [16:0] \$96 ;
  wire [16:0] \$97 ;
  wire [20:0] \$98 ;
  wire \$99 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$100 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$101 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$102 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$103 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$104 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$105 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$106 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$107 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$108 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$109 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$110 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$111 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$112 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$113 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$114 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$65 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$66 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$67 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$68 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$69 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$70 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$71 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$72 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$73 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$74 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$75 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$76 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$77 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$78 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$79 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$80 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$81 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$82 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$83 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$84 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$85 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$86 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$87 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$88 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$89 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$90 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$91 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$92 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$93 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$94 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$95 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$96 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  wire [15:0] \$signal$97 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  wire [15:0] \$signal$98 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  wire [19:0] \$signal$99 ;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:98" *)
  output [15:0] e_xval;
  wire [15:0] e_xval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:99" *)
  output [15:0] e_yval;
  wire [15:0] e_yval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:37" *)
  input [19:0] i_phase;
  wire [19:0] i_phase;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:34" *)
  input i_reset;
  wire i_reset;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:35" *)
  input [12:0] i_xval;
  wire [12:0] i_xval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:36" *)
  input [12:0] i_yval;
  wire [12:0] i_yval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:42" *)
  input [19:0] o_phval;
  wire [19:0] o_phval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:40" *)
  output [12:0] o_xval;
  reg [12:0] o_xval = 13'h0000;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:41" *)
  output [12:0] o_yval;
  reg [12:0] o_yval = 13'h0000;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph0;
  reg [19:0] ph0;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph1;
  reg [19:0] ph1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph10;
  reg [19:0] ph10;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph11;
  reg [19:0] ph11;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph12;
  reg [19:0] ph12;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph13;
  reg [19:0] ph13;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph14;
  reg [19:0] ph14;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph15;
  reg [19:0] ph15;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph16;
  reg [19:0] ph16;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph2;
  reg [19:0] ph2;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph3;
  reg [19:0] ph3;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph4;
  reg [19:0] ph4;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph5;
  reg [19:0] ph5;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph6;
  reg [19:0] ph6;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph7;
  reg [19:0] ph7;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph8;
  reg [19:0] ph8;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:115" *)
  output [19:0] ph9;
  reg [19:0] ph9;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:100" *)
  output [15:0] pre_xval;
  wire [15:0] pre_xval;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:101" *)
  output [15:0] pre_yval;
  wire [15:0] pre_yval;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv0;
  reg [15:0] xv0;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv1;
  reg [15:0] xv1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv10;
  reg [15:0] xv10;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv11;
  reg [15:0] xv11;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv12;
  reg [15:0] xv12;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv13;
  reg [15:0] xv13;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv14;
  reg [15:0] xv14;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv15;
  reg [15:0] xv15;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv16;
  reg [15:0] xv16;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv2;
  reg [15:0] xv2;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv3;
  reg [15:0] xv3;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv4;
  reg [15:0] xv4;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv5;
  reg [15:0] xv5;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv6;
  reg [15:0] xv6;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv7;
  reg [15:0] xv7;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv8;
  reg [15:0] xv8;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:109" *)
  output [15:0] xv9;
  reg [15:0] xv9;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv0;
  reg [15:0] yv0;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv1;
  wire [15:0] yv1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv10;
  wire [15:0] yv10;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv11;
  wire [15:0] yv11;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv12;
  wire [15:0] yv12;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv13;
  wire [15:0] yv13;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv14;
  wire [15:0] yv14;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv15;
  wire [15:0] yv15;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv16;
  wire [15:0] yv16;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv2;
  wire [15:0] yv2;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv3;
  wire [15:0] yv3;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv4;
  wire [15:0] yv4;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv5;
  wire [15:0] yv5;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv6;
  wire [15:0] yv6;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv7;
  wire [15:0] yv7;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv8;
  wire [15:0] yv8;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:110" *)
  output [15:0] yv9;
  wire [15:0] yv9;
  assign \$1  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:160" *) { i_yval, 2'h0 };
  assign \$2  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:162" *) 19'h40000;
  assign \$3  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:166" *) { i_yval, 2'h0 };
  assign \$4  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:168" *) 20'h80000;
  assign \$5  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:172" *) { i_xval, 2'h0 };
  assign \$6  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:173" *) { i_yval, 2'h0 };
  assign \$7  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:174" *) 20'h80000;
  assign \$8  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:178" *) { i_xval, 2'h0 };
  assign \$9  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:179" *) { i_yval, 2'h0 };
  assign \$10  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:180" *) 20'h80000;
  assign \$11  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:185" *) { i_xval, 2'h0 };
  assign \$12  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:186" *) 20'hc0000;
  assign \$13  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:191" *) { i_xval, 2'h0 };
  assign \$14  = i_phase - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:192" *) 20'hc0000;
  assign \$16  = $signed(xv0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(yv0[15:1]);
  assign \$17  = $signed(yv0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv0[15:1]);
  assign \$18  = ph0 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 17'h12ec0;
  assign \$19  = $signed(xv0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(yv0[15:1]);
  assign \$20  = $signed(yv0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv0[15:1]);
  assign \$21  = ph0 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 17'h12ec0;
  assign \$23  = $signed(xv1) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$24  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv1[15:2]);
  assign \$25  = ph1 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 16'h9fb3;
  assign \$26  = $signed(xv1) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$27  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv1[15:2]);
  assign \$28  = ph1 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 16'h9fb3;
  assign \$30  = $signed(xv2) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$31  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv2[15:3]);
  assign \$32  = ph2 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 15'h5111;
  assign \$33  = $signed(xv2) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$34  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv2[15:3]);
  assign \$35  = ph2 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 15'h5111;
  assign \$37  = $signed(xv3) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$38  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv3[15:4]);
  assign \$39  = ph3 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 14'h28b0;
  assign \$40  = $signed(xv3) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$41  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv3[15:4]);
  assign \$42  = ph3 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 14'h28b0;
  assign \$44  = $signed(xv4) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$45  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv4[15:5]);
  assign \$46  = ph4 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 13'h145d;
  assign \$47  = $signed(xv4) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$48  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv4[15:5]);
  assign \$49  = ph4 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 13'h145d;
  assign \$51  = $signed(xv5) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$52  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv5[15:6]);
  assign \$53  = ph5 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 12'ha2f;
  assign \$54  = $signed(xv5) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$55  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv5[15:6]);
  assign \$56  = ph5 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 12'ha2f;
  assign \$58  = $signed(xv6) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$59  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv6[15:7]);
  assign \$60  = ph6 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 11'h517;
  assign \$61  = $signed(xv6) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$62  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv6[15:7]);
  assign \$63  = ph6 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 11'h517;
  assign \$65  = $signed(xv7) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$66  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv7[15:8]);
  assign \$67  = ph7 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 10'h28b;
  assign \$68  = $signed(xv7) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$69  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv7[15:8]);
  assign \$70  = ph7 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 10'h28b;
  assign \$72  = $signed(xv8) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$73  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv8[15:9]);
  assign \$74  = ph8 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 9'h145;
  assign \$75  = $signed(xv8) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$76  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv8[15:9]);
  assign \$77  = ph8 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 9'h145;
  assign \$79  = $signed(xv9) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$80  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv9[15:10]);
  assign \$81  = ph9 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 8'ha2;
  assign \$82  = $signed(xv9) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$83  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv9[15:10]);
  assign \$84  = ph9 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 8'ha2;
  assign \$86  = $signed(xv10) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$87  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv10[15:11]);
  assign \$88  = ph10 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 7'h51;
  assign \$89  = $signed(xv10) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$90  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv10[15:11]);
  assign \$91  = ph10 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 7'h51;
  assign \$93  = $signed(xv11) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$94  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv11[15:12]);
  assign \$95  = ph11 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 6'h28;
  assign \$96  = $signed(xv11) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$97  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv11[15:12]);
  assign \$98  = ph11 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 6'h28;
  assign \$100  = $signed(xv12) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$101  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv12[15:13]);
  assign \$102  = ph12 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 5'h14;
  assign \$103  = $signed(xv12) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$104  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv12[15:13]);
  assign \$105  = ph12 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 5'h14;
  assign \$107  = $signed(xv13) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$108  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv13[15:14]);
  assign \$109  = ph13 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 4'ha;
  assign \$110  = $signed(xv13) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$111  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv13[15:14]);
  assign \$112  = ph13 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 4'ha;
  assign \$114  = $signed(xv14) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$115  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv14[15]);
  assign \$116  = ph14 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 3'h5;
  assign \$117  = $signed(xv14) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$118  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv14[15]);
  assign \$119  = ph14 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 3'h5;
  assign \$121  = $signed(xv15) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:240" *) $signed(1'h0);
  assign \$122  = $signed(1'h0) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:241" *) $signed(xv15[15]);
  assign \$123  = ph15 + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:242" *) 2'h2;
  assign \$124  = $signed(xv15) - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:247" *) $signed(1'h0);
  assign \$125  = $signed(1'h0) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:248" *) $signed(xv15[15]);
  assign \$126  = ph15 - (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:249" *) 2'h2;
  assign \$127  = ~ (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:257" *) xv16[3];
  assign \$128  = ~ (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:257" *) xv16[3];
  assign \$129  = $signed(xv16) + (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:255" *) $signed({ 1'h0, xv16[3], \$128 , \$127  });
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:40" *)
  always @(posedge clk)
    o_xval <= \$135 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/SineCORDIC/sine_generator_cordic.py:41" *)
  always @(posedge clk)
    o_yval <= \$136 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (i_phase[19:17])
      3'h0:
          xv0 = { 1'h0, i_xval, 2'h0 };
      3'h1:
          xv0 = \$1 [15:0];
      3'h2:
          xv0 = \$3 [15:0];
      3'h3:
          xv0 = \$5 [15:0];
      3'h4:
          xv0 = \$8 [15:0];
      3'h5:
          xv0 = { 1'h0, i_yval, 2'h0 };
      3'h6:
          xv0 = { 1'h0, i_yval, 2'h0 };
      3'h7:
          xv0 = { 1'h0, i_xval, 2'h0 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (i_phase[19:17])
      3'h0:
          yv0 = { 1'h0, i_xval, 2'h0 };
      3'h1:
          yv0 = { 1'h0, i_xval, 2'h0 };
      3'h2:
          yv0 = { 1'h0, i_xval, 2'h0 };
      3'h3:
          yv0 = \$6 [15:0];
      3'h4:
          yv0 = \$9 [15:0];
      3'h5:
          yv0 = \$11 [15:0];
      3'h6:
          yv0 = \$13 [15:0];
      3'h7:
          yv0 = { 1'h0, i_yval, 2'h0 };
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez (i_phase[19:17])
      3'h0:
          ph0 = i_phase;
      3'h1:
          ph0 = \$2 [19:0];
      3'h2:
          ph0 = \$4 [19:0];
      3'h3:
          ph0 = \$7 [19:0];
      3'h4:
          ph0 = \$10 [19:0];
      3'h5:
          ph0 = \$12 [19:0];
      3'h6:
          ph0 = \$14 [19:0];
      3'h7:
          ph0 = i_phase;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$15 , 1'h0 })
      2'b1?:
          xv1 = \$17 [15:0];
      default:
          xv1 = \$20 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$15 , 1'h0 })
      2'b1?:
          ph1 = \$18 [19:0];
      default:
          ph1 = \$21 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$22 , 1'h0 })
      2'b1?:
          xv2 = \$24 [15:0];
      default:
          xv2 = \$27 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$22 , 1'h0 })
      2'b1?:
          ph2 = \$25 [19:0];
      default:
          ph2 = \$28 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$29 , 1'h0 })
      2'b1?:
          xv3 = \$31 [15:0];
      default:
          xv3 = \$34 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$29 , 1'h0 })
      2'b1?:
          ph3 = \$32 [19:0];
      default:
          ph3 = \$35 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$36 , 1'h0 })
      2'b1?:
          xv4 = \$38 [15:0];
      default:
          xv4 = \$41 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$36 , 1'h0 })
      2'b1?:
          ph4 = \$39 [19:0];
      default:
          ph4 = \$42 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$43 , 1'h0 })
      2'b1?:
          xv5 = \$45 [15:0];
      default:
          xv5 = \$48 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$43 , 1'h0 })
      2'b1?:
          ph5 = \$46 [19:0];
      default:
          ph5 = \$49 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$50 , 1'h0 })
      2'b1?:
          xv6 = \$52 [15:0];
      default:
          xv6 = \$55 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$50 , 1'h0 })
      2'b1?:
          ph6 = \$53 [19:0];
      default:
          ph6 = \$56 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$57 , 1'h0 })
      2'b1?:
          xv7 = \$59 [15:0];
      default:
          xv7 = \$62 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$57 , 1'h0 })
      2'b1?:
          ph7 = \$60 [19:0];
      default:
          ph7 = \$63 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$64 , 1'h0 })
      2'b1?:
          xv8 = \$66 [15:0];
      default:
          xv8 = \$69 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$64 , 1'h0 })
      2'b1?:
          ph8 = \$67 [19:0];
      default:
          ph8 = \$70 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$71 , 1'h0 })
      2'b1?:
          xv9 = \$73 [15:0];
      default:
          xv9 = \$76 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$71 , 1'h0 })
      2'b1?:
          ph9 = \$74 [19:0];
      default:
          ph9 = \$77 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$78 , 1'h0 })
      2'b1?:
          xv10 = \$80 [15:0];
      default:
          xv10 = \$83 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$78 , 1'h0 })
      2'b1?:
          ph10 = \$81 [19:0];
      default:
          ph10 = \$84 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$85 , 1'h0 })
      2'b1?:
          xv11 = \$87 [15:0];
      default:
          xv11 = \$90 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$85 , 1'h0 })
      2'b1?:
          ph11 = \$88 [19:0];
      default:
          ph11 = \$91 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$92 , 1'h0 })
      2'b1?:
          xv12 = \$94 [15:0];
      default:
          xv12 = \$97 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$92 , 1'h0 })
      2'b1?:
          ph12 = \$95 [19:0];
      default:
          ph12 = \$98 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$99 , 1'h0 })
      2'b1?:
          xv13 = \$101 [15:0];
      default:
          xv13 = \$104 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$99 , 1'h0 })
      2'b1?:
          ph13 = \$102 [19:0];
      default:
          ph13 = \$105 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$106 , 1'h0 })
      2'b1?:
          xv14 = \$108 [15:0];
      default:
          xv14 = \$111 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$106 , 1'h0 })
      2'b1?:
          ph14 = \$109 [19:0];
      default:
          ph14 = \$112 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$113 , 1'h0 })
      2'b1?:
          xv15 = \$115 [15:0];
      default:
          xv15 = \$118 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$113 , 1'h0 })
      2'b1?:
          ph15 = \$116 [19:0];
      default:
          ph15 = \$119 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$120 , 1'h0 })
      2'b1?:
          xv16 = \$122 [15:0];
      default:
          xv16 = \$125 [15:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$120 , 1'h0 })
      2'b1?:
          ph16 = \$123 [19:0];
      default:
          ph16 = \$126 [19:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (i_reset) begin
      \$135  = 13'h0000;
    end else begin
      \$135  = \$133 [12:0];
    end
    if (rst) begin
      \$135  = 13'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (i_reset) begin
      \$136  = 13'h0000;
    end else begin
      \$136  = \$134 [12:0];
    end
    if (rst) begin
      \$136  = 13'h0000;
    end
  end
  assign \$signal  = xv0;
  assign \$signal$65  = yv0;
  assign \$signal$66  = ph0;
  assign \$signal$67  = xv1;
  assign \$signal$68  = 16'h0000;
  assign \$signal$69  = ph1;
  assign \$signal$70  = xv2;
  assign \$signal$71  = 16'h0000;
  assign \$signal$72  = ph2;
  assign \$signal$73  = xv3;
  assign \$signal$74  = 16'h0000;
  assign \$signal$75  = ph3;
  assign \$signal$76  = xv4;
  assign \$signal$77  = 16'h0000;
  assign \$signal$78  = ph4;
  assign \$signal$79  = xv5;
  assign \$signal$80  = 16'h0000;
  assign \$signal$81  = ph5;
  assign \$signal$82  = xv6;
  assign \$signal$83  = 16'h0000;
  assign \$signal$84  = ph6;
  assign \$signal$85  = xv7;
  assign \$signal$86  = 16'h0000;
  assign \$signal$87  = ph7;
  assign \$signal$88  = xv8;
  assign \$signal$89  = 16'h0000;
  assign \$signal$90  = ph8;
  assign \$signal$91  = xv9;
  assign \$signal$92  = 16'h0000;
  assign \$signal$93  = ph9;
  assign \$signal$94  = xv10;
  assign \$signal$95  = 16'h0000;
  assign \$signal$96  = ph10;
  assign \$signal$97  = xv11;
  assign \$signal$98  = 16'h0000;
  assign \$signal$99  = ph11;
  assign \$signal$100  = xv12;
  assign \$signal$101  = 16'h0000;
  assign \$signal$102  = ph12;
  assign \$signal$103  = xv13;
  assign \$signal$104  = 16'h0000;
  assign \$signal$105  = ph13;
  assign \$signal$106  = xv14;
  assign \$signal$107  = 16'h0000;
  assign \$signal$108  = ph14;
  assign \$signal$109  = xv15;
  assign \$signal$110  = 16'h0000;
  assign \$signal$111  = ph15;
  assign \$signal$112  = xv16;
  assign \$signal$113  = 16'h0000;
  assign \$signal$114  = ph16;
  assign yv1 = 16'h0000;
  assign yv2 = 16'h0000;
  assign yv3 = 16'h0000;
  assign yv4 = 16'h0000;
  assign yv5 = 16'h0000;
  assign yv6 = 16'h0000;
  assign yv7 = 16'h0000;
  assign yv8 = 16'h0000;
  assign yv9 = 16'h0000;
  assign yv10 = 16'h0000;
  assign yv11 = 16'h0000;
  assign yv12 = 16'h0000;
  assign yv13 = 16'h0000;
  assign yv14 = 16'h0000;
  assign yv15 = 16'h0000;
  assign yv16 = 16'h0000;
  assign pre_xval = \$129 [15:0];
  assign pre_yval = \$132 [15:0];
  assign e_xval = { 1'h0, i_xval, 2'h0 };
  assign e_yval = { 1'h0, i_yval, 2'h0 };
  assign \$15  = ph0[19];
  assign \$22  = ph1[19];
  assign \$29  = ph2[19];
  assign \$36  = ph3[19];
  assign \$43  = ph4[19];
  assign \$50  = ph5[19];
  assign \$57  = ph6[19];
  assign \$64  = ph7[19];
  assign \$71  = ph8[19];
  assign \$78  = ph9[19];
  assign \$85  = ph10[19];
  assign \$92  = ph11[19];
  assign \$99  = ph12[19];
  assign \$106  = ph13[19];
  assign \$113  = ph14[19];
  assign \$120  = ph15[19];
  assign \$130  = 1'h1;
  assign \$131  = 1'h1;
  assign \$132  = 18'h00003;
  assign \$133  = { 3'h0, \$129 [15:3] };
  assign \$134  = 16'h0000;
endmodule
