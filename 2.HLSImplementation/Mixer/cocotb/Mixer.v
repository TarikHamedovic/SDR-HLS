/* Generated by Yosys 0.40+22 (git sha1 fa0c5c1d4, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:48" *)
(* generator = "Amaranth" *)
module top(sinewave_in, cosinewave_in, clk, rst, rf_out, sinewave_out, cosinewave_out, rf_in);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire \$1 ;
  wire [12:0] \$2 ;
  wire [12:0] \$3 ;
  reg \$4 ;
  reg \$5 ;
  reg [11:0] \$6 ;
  reg [11:0] \$7 ;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:35" *)
  input [11:0] cosinewave_in;
  wire [11:0] cosinewave_in;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:40" *)
  output [11:0] cosinewave_out;
  reg [11:0] cosinewave_out = 12'h000;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:33" *)
  input rf_in;
  wire rf_in;
  (* init = 1'h1 *)
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:43" *)
  wire rf_in_delayed_1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:44" *)
  reg rf_in_delayed_2 = 1'h1;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:43" *)
  output rf_out;
  reg rf_out = 1'h1;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:34" *)
  input [11:0] sinewave_in;
  wire [11:0] sinewave_in;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:39" *)
  output [11:0] sinewave_out;
  reg [11:0] sinewave_out = 12'h000;
  assign \$3  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:65" *) $signed(cosinewave_in);
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:43" *)
  always @(posedge clk)
    rf_out <= \$4 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:44" *)
  always @(posedge clk)
    rf_in_delayed_2 <= \$5 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:39" *)
  always @(posedge clk)
    sinewave_out <= \$6 ;
  (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:40" *)
  always @(posedge clk)
    cosinewave_out <= \$7 ;
  assign \$1  = ! (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:57" *) rf_in_delayed_2;
  assign \$2  = - (* src = "/home/user/SDR-HLS/2.HLSImplementation/Mixer/Mixer.py:64" *) $signed(sinewave_in);
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$4  = rf_in;
    if (rst) begin
      \$4  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$5  = rf_out;
    if (rst) begin
      \$5  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      \$6  = sinewave_in;
    end else begin
      \$6  = \$2 [11:0];
    end
    if (rst) begin
      \$6  = 12'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      \$7  = cosinewave_in;
    end else begin
      \$7  = \$3 [11:0];
    end
    if (rst) begin
      \$7  = 12'h000;
    end
  end
  assign rf_in_delayed_1 = rf_out;
endmodule
