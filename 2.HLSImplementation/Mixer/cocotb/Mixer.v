/* Generated by Yosys 0.41+108 (git sha1 111b747d2, g++ 11.4.0-1ubuntu1~22.04 -fPIC -Os) */

(* top =  1  *)
(* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:38" *)
(* generator = "Amaranth" *)
module top(RFIn, sin_in, cos_in, \clk$7 , rst, RFOut, MixerOutSin, MixerOutCos, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire \$1 ;
  wire [12:0] \$2 ;
  wire [12:0] \$3 ;
  reg \$4 ;
  reg \$5 ;
  reg [11:0] \$6 ;
  reg [11:0] \$7 ;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:29" *)
  output [11:0] MixerOutCos;
  reg [11:0] MixerOutCos = 12'h000;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:28" *)
  output [11:0] MixerOutSin;
  reg [11:0] MixerOutSin = 12'h000;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:22" *)
  input RFIn;
  wire RFIn;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:33" *)
  reg RFInR = 1'h1;
  (* init = 1'h1 *)
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:32" *)
  wire RFInR1;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:32" *)
  output RFOut;
  reg RFOut = 1'h1;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:21" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input \clk$7 ;
  wire \clk$7 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  wire \clk$9 ;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:24" *)
  input [11:0] cos_in;
  wire [11:0] cos_in;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:23" *)
  input [11:0] sin_in;
  wire [11:0] sin_in;
  assign \$3  = - (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:55" *) $signed(cos_in);
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:32" *)
  always @(posedge \clk$7 )
    RFOut <= \$4 ;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:33" *)
  always @(posedge \clk$7 )
    RFInR <= \$5 ;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:28" *)
  always @(posedge \clk$7 )
    MixerOutSin <= \$6 ;
  (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:29" *)
  always @(posedge \clk$7 )
    MixerOutCos <= \$7 ;
  assign \$1  = ! (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:47" *) RFInR;
  assign \$2  = - (* src = "/home/user/SDR-HLS/HLSImplementation/Mixer/Mixer.py:54" *) $signed(sin_in);
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$4  = RFIn;
    if (rst) begin
      \$4  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$5  = RFOut;
    if (rst) begin
      \$5  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      \$6  = sin_in;
    end else begin
      \$6  = \$2 [11:0];
    end
    if (rst) begin
      \$6  = 12'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      \$7  = cos_in;
    end else begin
      \$7  = \$3 [11:0];
    end
    if (rst) begin
      \$7  = 12'h000;
    end
  end
  assign \clk$9  = \clk$7 ;
  assign RFInR1 = RFOut;

  //----------------------------- 
  // For simulation only
  //----------------------------- 
  initial begin
    $dumpfile("Mixer_waves.vcd");
    $dumpvars;
  end
endmodule
