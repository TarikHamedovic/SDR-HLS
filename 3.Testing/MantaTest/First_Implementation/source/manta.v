/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post93, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "/home/user/.local/lib/python3.10/site-packages/manta/manta.py:125" *)
(* generator = "Amaranth" *)
module manta(probe0, probe1, probe2, probe3, clk, rst, tx, rx);
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire [34:0] \bus_i$10 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire [15:0] \bus_i$10.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire [15:0] \bus_i$10.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire \bus_i$10.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire \bus_i$10.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire \bus_i$10.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire [34:0] bus_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire [34:0] \bus_o$11 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire [15:0] \bus_o$11.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire [15:0] \bus_o$11.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire \bus_o$11.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire \bus_o$11.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire \bus_o$11.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input probe0;
  wire probe0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [3:0] probe1;
  wire [3:0] probe1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [7:0] probe2;
  wire [7:0] probe2;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [15:0] probe3;
  wire [15:0] probe3;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:30" *)
  input rx;
  wire rx;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:31" *)
  output tx;
  wire tx;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/manta.py:128" *)
  \manta.interface  \interface  (
    .bus_i(\bus_i$10 ),
    .bus_o(bus_i),
    .clk(clk),
    .rst(rst),
    .rx(rx),
    .tx(tx)
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/manta.py:132" *)
  \manta.my_logic_analyzer  my_logic_analyzer (
    .bus_i(bus_i),
    .\bus_o$11 (\bus_i$10 ),
    .clk(clk),
    .probe0(probe0),
    .probe1(probe1),
    .probe2(probe2),
    .probe3(probe3),
    .rst(rst)
  );
  assign bus_o = bus_i;
  assign \bus_o$11  = \bus_i$10 ;
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
  assign \bus_o.addr  = bus_i[15:0];
  assign \bus_o.data  = bus_i[31:16];
  assign \bus_o.rw  = bus_i[32];
  assign \bus_o.valid  = bus_i[33];
  assign \bus_o.last  = bus_i[34];
  assign \bus_i$10.addr  = \bus_i$10 [15:0];
  assign \bus_i$10.data  = \bus_i$10 [31:16];
  assign \bus_i$10.rw  = \bus_i$10 [32];
  assign \bus_i$10.valid  = \bus_i$10 [33];
  assign \bus_i$10.last  = \bus_i$10 [34];
  assign \bus_o$11.addr  = \bus_i$10 [15:0];
  assign \bus_o$11.data  = \bus_i$10 [31:16];
  assign \bus_o$11.rw  = \bus_i$10 [32];
  assign \bus_o$11.valid  = \bus_i$10 [33];
  assign \bus_o$11.last  = \bus_i$10 [34];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:252" *)
(* generator = "Amaranth" *)
module \manta.interface (clk, rst, bus_o, tx, bus_i, rx);
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:23" *)
  wire [15:0] addr_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  input [34:0] bus_i;
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:34" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  output [34:0] bus_o;
  wire [34:0] bus_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:33" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:20" *)
  wire [7:0] data_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:12" *)
  wire [15:0] \data_i$11 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:14" *)
  wire [7:0] \data_i$15 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:15" *)
  wire [7:0] data_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:16" *)
  wire [7:0] \data_o$16 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:24" *)
  wire [15:0] \data_o$7 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:18" *)
  wire done_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:16" *)
  wire done_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:13" *)
  wire rw_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:25" *)
  wire rw_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:30" *)
  input rx;
  wire rx;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:30" *)
  wire \rx$1 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:15" *)
  wire start_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:17" *)
  wire start_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:18" *)
  output tx;
  wire tx;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:18" *)
  wire \tx$22 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:21" *)
  wire valid_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:14" *)
  wire \valid_i$14 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:16" *)
  wire valid_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:26" *)
  wire \valid_o$10 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:255" *)
  \manta.interface.bridge_rx  bridge_rx (
    .addr_o(addr_o),
    .clk(clk),
    .data_i(data_i),
    .data_o(\data_o$7 ),
    .rst(rst),
    .rw_o(rw_o),
    .valid_i(valid_i),
    .valid_o(\valid_o$10 )
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:256" *)
  \manta.interface.bridge_tx  bridge_tx (
    .clk(clk),
    .data_o(\data_i$15 ),
    .done_i(done_i),
    .\port$540$16 (bus_i[33:16]),
    .rst(rst),
    .start_o(start_i)
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:254" *)
  \manta.interface.uart_rx  uart_rx (
    .clk(clk),
    .data_o(data_i),
    .rst(rst),
    .rx(rx),
    .valid_o(valid_i)
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/__init__.py:257" *)
  \manta.interface.uart_tx  uart_tx (
    .clk(clk),
    .data_i(\data_i$15 ),
    .done_o(done_i),
    .rst(rst),
    .start_i(start_i),
    .tx(tx)
  );
  assign \rx$1  = rx;
  assign data_o = data_i;
  assign valid_o = valid_i;
  assign \data_i$11  = bus_i[31:16];
  assign rw_i = bus_i[32];
  assign \valid_i$14  = bus_i[33];
  assign \data_o$16  = \data_i$15 ;
  assign start_o = start_i;
  assign done_o = done_i;
  assign \tx$22  = tx;
  assign \bus_o.addr  = bus_o[15:0];
  assign \bus_o.data  = bus_o[31:16];
  assign \bus_o.rw  = bus_o[32];
  assign \bus_o.valid  = bus_o[33];
  assign \bus_o.last  = bus_o[34];
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
  assign bus_o[33] = \valid_o$10 ;
  assign bus_o[32] = rw_o;
  assign bus_o[15:0] = addr_o;
  assign bus_o[31:16] = \data_o$7 ;
  assign bus_o[34] = 1'h0;
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:133" *)
(* generator = "Amaranth" *)
module \manta.interface.bridge_rx (rst, valid_i, data_i, addr_o, data_o, valid_o, rw_o, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire [4:0] \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire \$3 ;
  wire \$30 ;
  wire [4:0] \$31 ;
  reg [3:0] \$32 ;
  reg [1:0] \$33 ;
  reg [31:0] \$34 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire [8:0] \$7 ;
  wire [8:0] \$8 ;
  wire [9:0] \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  reg [31:0] _buffer = 32'd0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[0] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[1] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[2] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[3] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[4] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[5] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[6] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  wire [3:0] \_buffer[7] ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:31" *)
  reg [3:0] _byte_num = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:34" *)
  reg [7:0] _from_ascii_hex;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:33" *)
  reg _is_ascii_hex;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:32" *)
  reg _is_eol;
  (* enum_base_type = "States" *)
  (* enum_value_00 = "IDLE" *)
  (* enum_value_01 = "READ" *)
  (* enum_value_10 = "WRITE" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:30" *)
  reg [1:0] _state = 2'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:23" *)
  output [15:0] addr_o;
  reg [15:0] addr_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:20" *)
  input [7:0] data_i;
  wire [7:0] data_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:24" *)
  output [15:0] data_o;
  reg [15:0] data_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:25" *)
  output rw_o;
  reg rw_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:21" *)
  input valid_i;
  wire valid_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:26" *)
  output valid_o;
  reg valid_o;
  assign \$1  = data_i >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:38" *) 6'h30;
  assign \$2  = data_i <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:38" *) 6'h39;
  assign \$3  = \$1  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:38" *) \$2 ;
  assign \$4  = data_i >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:43" *) 7'h41;
  assign \$5  = data_i <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:43" *) 7'h46;
  assign \$6  = \$4  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:43" *) \$5 ;
  assign \$7  = data_i - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:40" *) 6'h30;
  assign \$8  = data_i - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:45" *) 7'h41;
  assign \$9  = $signed(\$8 ) + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:45" *) $signed(5'h0a);
  assign \$10  = data_i == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:51" *) 4'hd;
  assign \$11  = data_i == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:51" *) 4'ha;
  assign \$12  = \$10  | (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:51" *) \$11 ;
  assign \$13  = _state == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:59" *) 1'h1;
  assign \$14  = _byte_num == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:59" *) 3'h4;
  assign \$15  = \$13  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:59" *) \$14 ;
  assign \$16  = \$15  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:59" *) _is_eol;
  assign \$17  = _state == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:69" *) 2'h2;
  assign \$18  = _byte_num == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:69" *) 4'h8;
  assign \$19  = \$17  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:69" *) \$18 ;
  assign \$20  = \$19  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:69" *) _is_eol;
  assign \$21  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:88" *) _state;
  assign \$22  = data_i == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:91" *) 7'h52;
  assign \$23  = data_i == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:94" *) 7'h57;
  assign \$24  = _state == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:97" *) 1'h1;
  assign \$25  = _byte_num < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:99" *) 3'h4;
  assign \$26  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:101" *) _is_ascii_hex;
  assign \$27  = _byte_num + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:109" *) 1'h1;
  assign \$28  = _state == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:114" *) 2'h2;
  assign \$29  = _byte_num < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:116" *) 4'h8;
  assign \$30  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:118" *) _is_ascii_hex;
  assign \$31  = _byte_num + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:126" *) 1'h1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:31" *)
  always @(posedge clk)
    _byte_num <= \$32 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:30" *)
  always @(posedge clk)
    _state <= \$33 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receive_bridge.py:29" *)
  always @(posedge clk)
    _buffer <= \$34 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$3 ) begin
      _is_ascii_hex = 1'h1;
    end else if (\$6 ) begin
      _is_ascii_hex = 1'h1;
    end else begin
      _is_ascii_hex = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$3 ) begin
      _from_ascii_hex = \$7 [7:0];
    end else if (\$6 ) begin
      _from_ascii_hex = \$9 [7:0];
    end else begin
      _from_ascii_hex = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      _is_eol = 1'h1;
    end else begin
      _is_eol = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$16 ) begin
      addr_o = { _buffer[3:0], _buffer[7:4], _buffer[11:8], _buffer[15:12] };
    end else if (\$20 ) begin
      addr_o = { _buffer[3:0], _buffer[7:4], _buffer[11:8], _buffer[15:12] };
    end else begin
      addr_o = 16'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$16 ) begin
      data_o = 16'h0000;
    end else if (\$20 ) begin
      data_o = { _buffer[19:16], _buffer[23:20], _buffer[27:24], _buffer[31:28] };
    end else begin
      data_o = 16'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$16 ) begin
      valid_o = 1'h1;
    end else if (\$20 ) begin
      valid_o = 1'h1;
    end else begin
      valid_o = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$16 ) begin
      rw_o = 1'h0;
    end else if (\$20 ) begin
      rw_o = 1'h1;
    end else begin
      rw_o = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$32  = _byte_num;
    if (valid_i) begin
      if (\$21 ) begin
        \$32  = 4'h0;
      end
      if (\$24 ) begin
        if (\$25 ) begin
          (* full_case = 32'd1 *)
          if (\$26 ) begin
          end else begin
            \$32  = \$27 [3:0];
          end
        end
      end
      if (\$28 ) begin
        if (\$29 ) begin
          (* full_case = 32'd1 *)
          if (\$30 ) begin
          end else begin
            \$32  = \$31 [3:0];
          end
        end
      end
    end
    if (rst) begin
      \$32  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$33  = _state;
    if (valid_i) begin
      if (\$21 ) begin
        if (\$22 ) begin
          \$33  = 2'h1;
        end else if (\$23 ) begin
          \$33  = 2'h2;
        end
      end
      if (\$24 ) begin
        (* full_case = 32'd1 *)
        if (\$25 ) begin
          if (\$26 ) begin
            \$33  = 2'h0;
          end
        end else begin
          \$33  = 2'h0;
        end
      end
      if (\$28 ) begin
        (* full_case = 32'd1 *)
        if (\$29 ) begin
          if (\$30 ) begin
            \$33  = 2'h0;
          end
        end else begin
          \$33  = 2'h0;
        end
      end
    end
    if (rst) begin
      \$33  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$34  = _buffer;
    if (valid_i) begin
      if (\$24 ) begin
        if (\$25 ) begin
          (* full_case = 32'd1 *)
          if (\$26 ) begin
          end else begin
            casez (_byte_num)
              4'h0:
                  \$34 [3:0] = _from_ascii_hex[3:0];
              4'h1:
                  \$34 [7:4] = _from_ascii_hex[3:0];
              4'h2:
                  \$34 [11:8] = _from_ascii_hex[3:0];
              4'h3:
                  \$34 [15:12] = _from_ascii_hex[3:0];
              4'h4:
                  \$34 [19:16] = _from_ascii_hex[3:0];
              4'h5:
                  \$34 [23:20] = _from_ascii_hex[3:0];
              4'h6:
                  \$34 [27:24] = _from_ascii_hex[3:0];
              4'h7:
                  \$34 [31:28] = _from_ascii_hex[3:0];
            endcase
          end
        end
      end
      if (\$28 ) begin
        if (\$29 ) begin
          (* full_case = 32'd1 *)
          if (\$30 ) begin
          end else begin
            casez (_byte_num)
              4'h0:
                  \$34 [3:0] = _from_ascii_hex[3:0];
              4'h1:
                  \$34 [7:4] = _from_ascii_hex[3:0];
              4'h2:
                  \$34 [11:8] = _from_ascii_hex[3:0];
              4'h3:
                  \$34 [15:12] = _from_ascii_hex[3:0];
              4'h4:
                  \$34 [19:16] = _from_ascii_hex[3:0];
              4'h5:
                  \$34 [23:20] = _from_ascii_hex[3:0];
              4'h6:
                  \$34 [27:24] = _from_ascii_hex[3:0];
              4'h7:
                  \$34 [31:28] = _from_ascii_hex[3:0];
            endcase
          end
        end
      end
    end
    if (rst) begin
      \$34  = 32'd0;
    end
  end
  assign \_buffer[0]  = _buffer[3:0];
  assign \_buffer[1]  = _buffer[7:4];
  assign \_buffer[2]  = _buffer[11:8];
  assign \_buffer[3]  = _buffer[15:12];
  assign \_buffer[4]  = _buffer[19:16];
  assign \_buffer[5]  = _buffer[23:20];
  assign \_buffer[6]  = _buffer[27:24];
  assign \_buffer[7]  = _buffer[31:28];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:28" *)
(* generator = "Amaranth" *)
module \manta.interface.bridge_tx (rst, data_o, start_o, done_i, \port$540$16 , clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$2  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire [4:0] \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  reg \$19 ;
  wire [6:0] \$2 ;
  reg [15:0] \$20 ;
  reg [3:0] \$21 ;
  wire [7:0] \$3 ;
  wire [8:0] \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:21" *)
  reg [15:0] _buffer = 16'h0000;
  (* init = 1'h0 *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:23" *)
  wire _busy;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:22" *)
  reg [3:0] _count = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:25" *)
  reg [3:0] _n;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:24" *)
  reg [7:0] _to_ascii_hex;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:12" *)
  wire [15:0] data_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:16" *)
  output [7:0] data_o;
  reg [7:0] data_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:18" *)
  input done_i;
  wire done_i;
  input [17:0] \port$540$16 ;
  wire [17:0] \port$540$16 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:13" *)
  wire rw_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:23" *)
  output start_o;
  reg start_o = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:14" *)
  wire valid_i;
  assign \$1  = _n < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:54" *) 4'ha;
  assign \$2  = _n + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:55" *) 6'h30;
  assign \$3  = _n + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:57" *) 7'h41;
  assign \$4  = \$3  - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:57" *) 4'ha;
  assign \$5  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:60" *) _count;
  assign \$6  = _count == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:64" *) 1'h1;
  assign \$7  = _count == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:68" *) 2'h2;
  assign \$8  = _count == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:72" *) 2'h3;
  assign \$9  = _count == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:76" *) 3'h4;
  assign \$10  = _count == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:80" *) 3'h5;
  assign \$11  = _count == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:84" *) 3'h6;
  assign \$12  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:32" *) start_o;
  assign \$13  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:33" *) \port$540$16 [16];
  assign \$14  = \port$540$16 [17] & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:33" *) \$13 ;
  assign \$15  = _count + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:40" *) 1'h1;
  assign \$16  = _count > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:43" *) 3'h5;
  assign \$17  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:47" *) \port$540$16 [16];
  assign \$18  = \port$540$16 [17] & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:47" *) \$17 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:23" *)
  always @(posedge clk)
    start_o <= \$19 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:21" *)
  always @(posedge clk)
    _buffer <= \$20 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmit_bridge.py:22" *)
  always @(posedge clk)
    _count <= \$21 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      _to_ascii_hex = { 1'h0, \$2  };
    end else begin
      _to_ascii_hex = \$4 [7:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    if (\$5 ) begin
      _n = 4'h0;
    end else if (\$6 ) begin
      _n = _buffer[15:12];
    end else if (\$7 ) begin
      _n = _buffer[11:8];
    end else if (\$8 ) begin
      _n = _buffer[7:4];
    end else if (\$9 ) begin
      _n = _buffer[3:0];
    end else if (\$10 ) begin
      _n = 4'h0;
    end else if (\$11 ) begin
      _n = 4'h0;
    end else begin
      _n = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    (* full_case = 32'd1 *)
    if (\$5 ) begin
      data_o = 8'h44;
    end else if (\$6 ) begin
      data_o = _to_ascii_hex;
    end else if (\$7 ) begin
      data_o = _to_ascii_hex;
    end else if (\$8 ) begin
      data_o = _to_ascii_hex;
    end else if (\$9 ) begin
      data_o = _to_ascii_hex;
    end else if (\$10 ) begin
      data_o = 8'h0d;
    end else if (\$11 ) begin
      data_o = 8'h0a;
    end else begin
      data_o = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$19  = start_o;
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      if (\$14 ) begin
        \$19  = 1'h1;
      end
    end else begin
      if (done_i) begin
        if (\$16 ) begin
          (* full_case = 32'd1 *)
          if (\$18 ) begin
          end else begin
            \$19  = 1'h0;
          end
        end
      end
    end
    if (rst) begin
      \$19  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$20  = _buffer;
    (* full_case = 32'd1 *)
    if (\$12 ) begin
      if (\$14 ) begin
        \$20  = \port$540$16 [15:0];
      end
    end else begin
      if (done_i) begin
        if (\$16 ) begin
          if (\$18 ) begin
            \$20  = \port$540$16 [15:0];
          end
        end
      end
    end
    if (rst) begin
      \$20  = 16'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$2 ) begin end
    \$21  = _count;
    (* full_case = 32'd1 *)
    if (\$12 ) begin
    end else begin
      if (done_i) begin
        \$21  = \$15 [3:0];
        if (\$16 ) begin
          \$21  = 4'h0;
        end
      end
    end
    if (rst) begin
      \$21  = 4'h0;
    end
  end
  assign _busy = start_o;
  assign valid_i = \port$540$16 [17];
  assign rw_i = \port$540$16 [16];
  assign data_i = \port$540$16 [15:0];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:28" *)
(* generator = "Amaranth" *)
module \manta.interface.uart_rx (clk, rst, valid_o, data_o, rx);
  reg \$auto$verilog_backend.cc:2352:dump_module$3  = 0;
  wire \$1 ;
  reg \$10 ;
  reg \$11 ;
  reg \$12 ;
  reg [3:0] \$13 ;
  reg [7:0] \$14 ;
  reg [7:0] \$15 ;
  wire \$2 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire [4:0] \$6 ;
  wire [8:0] \$7 ;
  reg \$8 ;
  reg \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:21" *)
  reg [7:0] _baud_counter = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:20" *)
  reg [3:0] _bit_index = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:19" *)
  reg _busy = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:23" *)
  reg _rx_d = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:24" *)
  reg _rx_q = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:25" *)
  reg _rx_q_prev = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:15" *)
  output [7:0] data_o;
  reg [7:0] data_o = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:14" *)
  input rx;
  wire rx;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:16" *)
  output valid_o;
  reg valid_o = 1'h0;
  assign \$1  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:39" *) _busy;
  assign \$2  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:40" *) _rx_q;
  assign \$3  = \$2  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:40" *) _rx_q_prev;
  assign \$4  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:48" *) _baud_counter;
  assign \$5  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:49" *) _bit_index;
  assign \$6  = _bit_index - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:58" *) 1'h1;
  assign \$7  = _baud_counter - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:62" *) 1'h1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:23" *)
  always @(posedge clk)
    _rx_d <= \$8 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:24" *)
  always @(posedge clk)
    _rx_q <= \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:25" *)
  always @(posedge clk)
    _rx_q_prev <= \$10 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:16" *)
  always @(posedge clk)
    valid_o <= \$11 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:19" *)
  always @(posedge clk)
    _busy <= \$12 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:20" *)
  always @(posedge clk)
    _bit_index <= \$13 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:21" *)
  always @(posedge clk)
    _baud_counter <= \$14 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/receiver.py:15" *)
  always @(posedge clk)
    data_o <= \$15 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$8  = rx;
    if (rst) begin
      \$8  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$9  = _rx_d;
    if (rst) begin
      \$9  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$10  = _rx_q;
    if (rst) begin
      \$10  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$11  = 1'h0;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      if (\$4 ) begin
        if (\$5 ) begin
          \$11  = 1'h1;
        end
      end
    end
    if (rst) begin
      \$11  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$12  = _busy;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      if (\$3 ) begin
        \$12  = 1'h1;
      end
    end else begin
      if (\$4 ) begin
        if (\$5 ) begin
          \$12  = 1'h0;
        end
      end
    end
    if (rst) begin
      \$12  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$13  = _bit_index;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      if (\$3 ) begin
        \$13  = 4'h8;
      end
    end else begin
      if (\$4 ) begin
        (* full_case = 32'd1 *)
        if (\$5 ) begin
          \$13  = 4'h0;
        end else begin
          \$13  = \$6 [3:0];
        end
      end
    end
    if (rst) begin
      \$13  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$14  = _baud_counter;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      if (\$3 ) begin
        \$14  = 8'h9a;
      end
    end else begin
      (* full_case = 32'd1 *)
      if (\$4 ) begin
        (* full_case = 32'd1 *)
        if (\$5 ) begin
          \$14  = 8'h00;
        end else begin
          \$14  = 8'h67;
        end
      end else begin
        \$14  = \$7 [7:0];
      end
    end
    if (rst) begin
      \$14  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$3 ) begin end
    \$15  = data_o;
    (* full_case = 32'd1 *)
    if (\$1 ) begin
    end else begin
      if (\$4 ) begin
        (* full_case = 32'd1 *)
        if (\$5 ) begin
        end else begin
          \$15  = { _rx_q, data_o[7:1] };
        end
      end
    end
    if (rst) begin
      \$15  = 8'h00;
    end
  end
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:26" *)
(* generator = "Amaranth" *)
module \manta.interface.uart_tx (rst, data_i, start_i, done_o, tx, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$4  = 0;
  wire \$1 ;
  wire [4:0] \$10 ;
  reg [6:0] \$11 ;
  reg [8:0] \$12 ;
  reg [3:0] \$13 ;
  reg \$14 ;
  reg \$15 ;
  wire \$2 ;
  wire [7:0] \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:21" *)
  reg [6:0] _baud_counter = 7'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:23" *)
  reg [3:0] _bit_index = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:22" *)
  reg [8:0] _buffer = 9'h000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:14" *)
  input [7:0] data_i;
  wire [7:0] data_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:16" *)
  output done_o;
  reg done_o = 1'h1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:15" *)
  input start_i;
  wire start_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:18" *)
  output tx;
  reg tx = 1'h1;
  assign \$1  = start_i & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:28" *) done_o;
  assign \$2  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:35" *) done_o;
  assign \$3  = _baud_counter - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:36" *) 1'h1;
  assign \$4  = _baud_counter == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:38" *) 1'h1;
  assign \$5  = _bit_index == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:38" *) 4'h9;
  assign \$6  = \$4  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:38" *) \$5 ;
  assign \$7  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:42" *) _baud_counter;
  assign \$8  = _bit_index < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:46" *) 4'h9;
  assign \$9  = _buffer >> _bit_index;
  assign \$10  = _bit_index + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:48" *) 1'h1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:21" *)
  always @(posedge clk)
    _baud_counter <= \$11 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:22" *)
  always @(posedge clk)
    _buffer <= \$12 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:23" *)
  always @(posedge clk)
    _bit_index <= \$13 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:16" *)
  always @(posedge clk)
    done_o <= \$14 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/uart/transmitter.py:18" *)
  always @(posedge clk)
    tx <= \$15 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$11  = _baud_counter;
    if (\$1 ) begin
      \$11  = 7'h67;
    end else if (\$2 ) begin
      \$11  = \$3 [6:0];
      if (\$7 ) begin
        \$11  = 7'h67;
      end
    end
    if (rst) begin
      \$11  = 7'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$12  = _buffer;
    if (\$1 ) begin
      \$12  = { 1'h1, data_i };
    end else if (\$2 ) begin
      if (\$7 ) begin
        (* full_case = 32'd1 *)
        if (\$8 ) begin
        end else begin
          if (start_i) begin
            \$12  = { 1'h1, data_i };
          end
        end
      end
    end
    if (rst) begin
      \$12  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$13  = _bit_index;
    if (\$1 ) begin
      \$13  = 4'h0;
    end else if (\$2 ) begin
      if (\$7 ) begin
        (* full_case = 32'd1 *)
        if (\$8 ) begin
          \$13  = \$10 [3:0];
        end else begin
          if (start_i) begin
            \$13  = 4'h0;
          end
        end
      end
    end
    if (rst) begin
      \$13  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$14  = done_o;
    if (\$1 ) begin
      \$14  = 1'h0;
    end else if (\$2 ) begin
      \$14  = \$6 ;
      if (\$7 ) begin
        (* full_case = 32'd1 *)
        if (\$8 ) begin
        end else begin
          (* full_case = 32'd1 *)
          if (start_i) begin
          end else begin
            \$14  = 1'h1;
          end
        end
      end
    end
    if (rst) begin
      \$14  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$4 ) begin end
    \$15  = tx;
    if (\$1 ) begin
      \$15  = 1'h0;
    end else if (\$2 ) begin
      if (\$7 ) begin
        (* full_case = 32'd1 *)
        if (\$8 ) begin
          \$15  = \$9 ;
        end else begin
          if (start_i) begin
            \$15  = 1'h0;
          end
        end
      end
    end
    if (rst) begin
      \$15  = 1'h1;
    end
  end
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:160" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer (probe1, probe2, probe3, clk, rst, bus_i, \bus_o$11 , probe0);
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  input [34:0] bus_i;
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire [34:0] \bus_i$6 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire [15:0] \bus_i$6.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire [15:0] \bus_i$6.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire \bus_i$6.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire \bus_i$6.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:26" *)
  wire \bus_i$6.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [34:0] \bus_i$7 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i$7.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i$7.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i$7.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i$7.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i$7.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire [34:0] \bus_i$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire [15:0] \bus_i$9.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire [15:0] \bus_i$9.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire \bus_i$9.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire \bus_i$9.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire \bus_i$9.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [34:0] bus_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [34:0] \bus_o$10 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o$10.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o$10.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o$10.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o$10.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o$10.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  output [34:0] \bus_o$11 ;
  wire [34:0] \bus_o$11 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire [15:0] \bus_o$11.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire [15:0] \bus_o$11.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire \bus_o$11.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire \bus_o$11.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:27" *)
  wire \bus_o$11.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire [34:0] \bus_o$12 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire [15:0] \bus_o$12.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire [15:0] \bus_o$12.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire \bus_o$12.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire \bus_o$12.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire \bus_o$12.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input probe0;
  wire probe0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [3:0] probe1;
  wire [3:0] probe1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [7:0] probe2;
  wire [7:0] probe2;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [15:0] probe3;
  wire [15:0] probe3;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:29" *)
  wire trig;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:31" *)
  wire trigger;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:34" *)
  wire [7:0] user_addr;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:35" *)
  wire [28:0] user_data_in;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:36" *)
  wire user_write_enable;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:32" *)
  wire write_enable;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:37" *)
  wire [7:0] write_pointer;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:163" *)
  \manta.my_logic_analyzer.fsm  fsm (
    .bus_i(bus_i),
    .bus_o(\bus_i$7 ),
    .clk(clk),
    .rst(rst),
    .trigger(trigger),
    .write_enable(user_write_enable),
    .write_pointer(user_addr)
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:164" *)
  \manta.my_logic_analyzer.sample_mem  sample_mem (
    .bus_i(\bus_i$9 ),
    .bus_o(\bus_o$11 ),
    .clk(clk),
    .\port$0$16 (probe3),
    .\port$0$3 (probe0),
    .\port$0$4 (probe1),
    .\port$0$8 (probe2),
    .rst(rst),
    .user_addr(user_addr),
    .user_write_enable(user_write_enable)
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:165" *)
  \manta.my_logic_analyzer.trig_blk  trig_blk (
    .bus_i(\bus_i$7 ),
    .bus_o(\bus_i$9 ),
    .clk(clk),
    .probe0(probe0),
    .probe1(probe1),
    .probe2(probe2),
    .probe3(probe3),
    .rst(rst),
    .trig(trigger)
  );
  assign user_data_in = { probe0, probe1, probe2, probe3 };
  assign \bus_i$6  = bus_i;
  assign bus_o = \bus_i$7 ;
  assign \bus_o$10  = \bus_i$9 ;
  assign \bus_o$12  = \bus_o$11 ;
  assign trig = trigger;
  assign write_pointer = user_addr;
  assign write_enable = user_write_enable;
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
  assign \bus_i$6.addr  = bus_i[15:0];
  assign \bus_i$6.data  = bus_i[31:16];
  assign \bus_i$6.rw  = bus_i[32];
  assign \bus_i$6.valid  = bus_i[33];
  assign \bus_i$6.last  = bus_i[34];
  assign \bus_i$7.addr  = \bus_i$7 [15:0];
  assign \bus_i$7.data  = \bus_i$7 [31:16];
  assign \bus_i$7.rw  = \bus_i$7 [32];
  assign \bus_i$7.valid  = \bus_i$7 [33];
  assign \bus_i$7.last  = \bus_i$7 [34];
  assign \bus_o.addr  = \bus_i$7 [15:0];
  assign \bus_o.data  = \bus_i$7 [31:16];
  assign \bus_o.rw  = \bus_i$7 [32];
  assign \bus_o.valid  = \bus_i$7 [33];
  assign \bus_o.last  = \bus_i$7 [34];
  assign \bus_i$9.addr  = \bus_i$9 [15:0];
  assign \bus_i$9.data  = \bus_i$9 [31:16];
  assign \bus_i$9.rw  = \bus_i$9 [32];
  assign \bus_i$9.valid  = \bus_i$9 [33];
  assign \bus_i$9.last  = \bus_i$9 [34];
  assign \bus_o$10.addr  = \bus_i$9 [15:0];
  assign \bus_o$10.data  = \bus_i$9 [31:16];
  assign \bus_o$10.rw  = \bus_i$9 [32];
  assign \bus_o$10.valid  = \bus_i$9 [33];
  assign \bus_o$10.last  = \bus_i$9 [34];
  assign \bus_o$11.addr  = \bus_o$11 [15:0];
  assign \bus_o$11.data  = \bus_o$11 [31:16];
  assign \bus_o$11.rw  = \bus_o$11 [32];
  assign \bus_o$11.valid  = \bus_o$11 [33];
  assign \bus_o$11.last  = \bus_o$11 [34];
  assign \bus_o$12.addr  = \bus_o$11 [15:0];
  assign \bus_o$12.data  = \bus_o$11 [31:16];
  assign \bus_o$12.rw  = \bus_o$11 [32];
  assign \bus_o$12.valid  = \bus_o$11 [33];
  assign \bus_o$12.last  = \bus_o$11 [34];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:71" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.fsm (rst, trigger, bus_i, write_pointer, write_enable, bus_o, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$5  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire [8:0] \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire [8:0] \$15 ;
  wire [8:0] \$16 ;
  wire [10:0] \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire [8:0] \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  wire \$23 ;
  reg \$24 ;
  reg \$25 ;
  reg [7:0] \$26 ;
  reg [7:0] \$27 ;
  reg \$28 ;
  reg [2:0] \$29 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  input [34:0] bus_i;
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  output [34:0] bus_o;
  wire [34:0] bus_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:89" *)
  reg [7:0] next_write_pointer;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:85" *)
  reg prev_request_start = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:86" *)
  reg prev_request_stop = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:36" *)
  reg [7:0] read_pointer = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:47" *)
  wire request_start;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:48" *)
  wire request_stop;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* enum_base_type = "States" *)
  (* enum_value_000 = "IDLE" *)
  (* enum_value_001 = "MOVE_TO_POSITION" *)
  (* enum_value_010 = "IN_POSITION" *)
  (* enum_value_011 = "CAPTURING" *)
  (* enum_value_100 = "CAPTURED" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:35" *)
  reg [2:0] state = 3'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:31" *)
  input trigger;
  wire trigger;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:45" *)
  wire [7:0] trigger_location;
  (* enum_base_type = "TriggerModes" *)
  (* enum_value_00 = "SINGLE_SHOT" *)
  (* enum_value_01 = "INCREMENTAL" *)
  (* enum_value_10 = "IMMEDIATE" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:46" *)
  wire [1:0] trigger_mode;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:32" *)
  output write_enable;
  reg write_enable = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:37" *)
  output [7:0] write_pointer;
  reg [7:0] write_pointer = 8'h00;
  assign \$1  = write_pointer == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:90" *) 8'hff;
  assign \$2  = write_pointer + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:94" *) 1'h1;
  assign \$3  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:100" *) state;
  assign \$4  = state == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:123" *) 1'h1;
  assign \$5  = state == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:133" *) 2'h2;
  assign \$6  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:105" *) prev_request_start;
  assign \$7  = request_start & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:105" *) \$6 ;
  assign \$8  = trigger_mode == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:106" *) 2'h2;
  assign \$9  = trigger_mode == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:110" *) 1'h1;
  assign \$10  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:114" *) trigger_mode;
  assign \$11  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:115" *) trigger_location;
  assign \$12  = trigger_location - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:126" *) 1'h1;
  assign \$13  = write_pointer == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:126" *) \$12 ;
  assign \$14  = write_pointer > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:140" *) trigger_location;
  assign \$15  = write_pointer - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:141" *) trigger_location;
  assign \$16  = write_pointer - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:144" *) trigger_location;
  assign \$17  = $signed(\$16 ) + (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:144" *) $signed(10'h100);
  assign \$18  = state == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:149" *) 2'h3;
  assign \$19  = trigger_mode != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:151" *) 1'h1;
  assign \$20  = next_write_pointer == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:152" *) read_pointer;
  assign \$21  = next_write_pointer == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:162" *) read_pointer;
  assign \$22  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:170" *) prev_request_stop;
  assign \$23  = request_stop & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:170" *) \$22 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:85" *)
  always @(posedge clk)
    prev_request_start <= \$24 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:86" *)
  always @(posedge clk)
    prev_request_stop <= \$25 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:37" *)
  always @(posedge clk)
    write_pointer <= \$26 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:36" *)
  always @(posedge clk)
    read_pointer <= \$27 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:32" *)
  always @(posedge clk)
    write_enable <= \$28 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:35" *)
  always @(posedge clk)
    state <= \$29 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:73" *)
  \manta.my_logic_analyzer.fsm.registers  registers (
    .bus_i(bus_i),
    .bus_o(bus_o),
    .clk(clk),
    .read_pointer(read_pointer),
    .request_start(request_start),
    .request_stop(request_stop),
    .rst(rst),
    .state(state),
    .trigger_location(trigger_location),
    .trigger_mode(trigger_mode),
    .write_pointer(write_pointer)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      next_write_pointer = 8'h00;
    end else begin
      next_write_pointer = \$2 [7:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$24  = request_start;
    if (rst) begin
      \$24  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$25  = request_stop;
    if (rst) begin
      \$25  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$26  = write_pointer;
    if (\$3 ) begin
      \$26  = 8'h00;
    end else if (\$4 ) begin
      \$26  = next_write_pointer;
    end else if (\$5 ) begin
      \$26  = next_write_pointer;
    end
    if (\$18 ) begin
      (* full_case = 32'd1 *)
      if (\$19 ) begin
        (* full_case = 32'd1 *)
        if (\$20 ) begin
        end else begin
          \$26  = next_write_pointer;
        end
      end else begin
        if (trigger) begin
          (* full_case = 32'd1 *)
          if (\$21 ) begin
          end else begin
            \$26  = next_write_pointer;
          end
        end
      end
    end
    if (rst) begin
      \$26  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$27  = read_pointer;
    if (\$3 ) begin
      \$27  = 8'h00;
    end else if (\$4 ) begin
    end else if (\$5 ) begin
      if (trigger) begin
        (* full_case = 32'd1 *)
        if (\$14 ) begin
          \$27  = \$15 [7:0];
        end else begin
          \$27  = \$17 [7:0];
        end
      end
    end
    if (rst) begin
      \$27  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$28  = write_enable;
    if (\$3 ) begin
      \$28  = 1'h0;
      if (\$7 ) begin
        if (\$8 ) begin
          \$28  = 1'h1;
        end else if (\$9 ) begin
          \$28  = 1'h1;
        end else if (\$10 ) begin
          \$28  = 1'h1;
        end
      end
    end
    if (\$18 ) begin
      (* full_case = 32'd1 *)
      if (\$19 ) begin
        if (\$20 ) begin
          \$28  = 1'h0;
        end
      end else begin
        if (trigger) begin
          if (\$21 ) begin
            \$28  = 1'h0;
          end
        end
      end
    end
    if (rst) begin
      \$28  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$5 ) begin end
    \$29  = state;
    if (\$3 ) begin
      if (\$7 ) begin
        if (\$8 ) begin
          \$29  = 3'h3;
        end else if (\$9 ) begin
          \$29  = 3'h3;
        end else if (\$10 ) begin
          (* full_case = 32'd1 *)
          if (\$11 ) begin
            \$29  = 3'h2;
          end else begin
            \$29  = 3'h1;
          end
        end
      end
    end else if (\$4 ) begin
      if (\$13 ) begin
        (* full_case = 32'd1 *)
        if (trigger) begin
          \$29  = 3'h3;
        end else begin
          \$29  = 3'h2;
        end
      end
    end else if (\$5 ) begin
      if (trigger) begin
        \$29  = 3'h3;
      end
    end
    if (\$18 ) begin
      (* full_case = 32'd1 *)
      if (\$19 ) begin
        if (\$20 ) begin
          \$29  = 3'h4;
        end
      end else begin
        if (trigger) begin
          if (\$21 ) begin
            \$29  = 3'h4;
          end
        end
      end
    end
    if (\$23 ) begin
      \$29  = 3'h0;
    end
    if (rst) begin
      \$29  = 3'h0;
    end
  end
  assign \bus_o.addr  = bus_o[15:0];
  assign \bus_o.data  = bus_o[31:16];
  assign \bus_o.rw  = bus_o[32];
  assign \bus_o.valid  = bus_o[33];
  assign \bus_o.last  = bus_o[34];
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:155" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.fsm.registers (rst, bus_i, write_pointer, read_pointer, state, bus_o, trigger_location, trigger_mode, request_start, request_stop, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$6  = 0;
  wire \$1 ;
  reg [2:0] \$10 ;
  reg [7:0] \$11 ;
  reg [7:0] \$12 ;
  reg [7:0] \$13 ;
  reg [1:0] \$14 ;
  reg \$15 ;
  reg \$16 ;
  reg \$17 ;
  reg [7:0] \$18 ;
  reg [1:0] \$19 ;
  wire \$2 ;
  reg \$20 ;
  reg \$21 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  reg [34:0] \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:29" *)
  reg _strobe = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  input [34:0] bus_i;
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  output [34:0] bus_o;
  reg [34:0] bus_o = 35'h000000000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:36" *)
  input [7:0] read_pointer;
  wire [7:0] read_pointer;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:30" *)
  reg [7:0] read_pointer_buf = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:47" *)
  output request_start;
  reg request_start = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg request_start_buf = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:48" *)
  output request_stop;
  reg request_stop = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg request_stop_buf = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* enum_base_type = "States" *)
  (* enum_value_000 = "IDLE" *)
  (* enum_value_001 = "MOVE_TO_POSITION" *)
  (* enum_value_010 = "IN_POSITION" *)
  (* enum_value_011 = "CAPTURING" *)
  (* enum_value_100 = "CAPTURED" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:35" *)
  input [2:0] state;
  wire [2:0] state;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:30" *)
  reg [2:0] state_buf = 3'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:45" *)
  output [7:0] trigger_location;
  reg [7:0] trigger_location = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [7:0] trigger_location_buf = 8'h00;
  (* enum_base_type = "TriggerModes" *)
  (* enum_value_00 = "SINGLE_SHOT" *)
  (* enum_value_01 = "INCREMENTAL" *)
  (* enum_value_10 = "IMMEDIATE" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:46" *)
  output [1:0] trigger_mode;
  reg [1:0] trigger_mode = 2'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [1:0] trigger_mode_buf = 2'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:37" *)
  input [7:0] write_pointer;
  wire [7:0] write_pointer;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:30" *)
  reg [7:0] write_pointer_buf = 8'h00;
  assign \$1  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) bus_i[15:0];
  assign \$2  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 1'h1;
  assign \$3  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 2'h2;
  assign \$4  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 2'h3;
  assign \$5  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 3'h4;
  assign \$6  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 3'h5;
  assign \$7  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 3'h6;
  assign \$8  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 3'h7;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  always @(posedge clk)
    bus_o <= \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:30" *)
  always @(posedge clk)
    state_buf <= \$10 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:30" *)
  always @(posedge clk)
    read_pointer_buf <= \$11 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:30" *)
  always @(posedge clk)
    write_pointer_buf <= \$12 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:45" *)
  always @(posedge clk)
    trigger_location <= \$13 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:46" *)
  always @(posedge clk)
    trigger_mode <= \$14 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:47" *)
  always @(posedge clk)
    request_start <= \$15 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/fsm.py:48" *)
  always @(posedge clk)
    request_stop <= \$16 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:29" *)
  always @(posedge clk)
    _strobe <= \$17 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    trigger_location_buf <= \$18 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    trigger_mode_buf <= \$19 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    request_start_buf <= \$20 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    request_stop_buf <= \$21 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$9  = bus_i;
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 15'h0000, _strobe };
      end
    end
    if (\$2 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 13'h0000, state_buf };
      end
    end
    if (\$3 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 8'h00, read_pointer_buf };
      end
    end
    if (\$4 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 8'h00, write_pointer_buf };
      end
    end
    if (\$5 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 8'h00, trigger_location_buf };
      end
    end
    if (\$6 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 14'h0000, trigger_mode_buf };
      end
    end
    if (\$7 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 15'h0000, request_start_buf };
      end
    end
    if (\$8 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$9 [31:16] = { 15'h0000, request_stop_buf };
      end
    end
    if (rst) begin
      \$9  = 35'h000000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$10  = state_buf;
    if (_strobe) begin
      \$10  = state;
    end
    if (\$2 ) begin
      if (bus_i[32]) begin
        \$10  = bus_i[18:16];
      end
    end
    if (rst) begin
      \$10  = 3'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$11  = read_pointer_buf;
    if (_strobe) begin
      \$11  = read_pointer;
    end
    if (\$3 ) begin
      if (bus_i[32]) begin
        \$11  = bus_i[23:16];
      end
    end
    if (rst) begin
      \$11  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$12  = write_pointer_buf;
    if (_strobe) begin
      \$12  = write_pointer;
    end
    if (\$4 ) begin
      if (bus_i[32]) begin
        \$12  = bus_i[23:16];
      end
    end
    if (rst) begin
      \$12  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$13  = trigger_location;
    if (_strobe) begin
      \$13  = trigger_location_buf;
    end
    if (rst) begin
      \$13  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$14  = trigger_mode;
    if (_strobe) begin
      \$14  = trigger_mode_buf;
    end
    if (rst) begin
      \$14  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$15  = request_start;
    if (_strobe) begin
      \$15  = request_start_buf;
    end
    if (rst) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$16  = request_stop;
    if (_strobe) begin
      \$16  = request_stop_buf;
    end
    if (rst) begin
      \$16  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$17  = _strobe;
    if (\$1 ) begin
      if (bus_i[32]) begin
        \$17  = bus_i[16];
      end
    end
    if (rst) begin
      \$17  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$18  = trigger_location_buf;
    if (\$5 ) begin
      if (bus_i[32]) begin
        \$18  = bus_i[23:16];
      end
    end
    if (rst) begin
      \$18  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$19  = trigger_mode_buf;
    if (\$6 ) begin
      if (bus_i[32]) begin
        \$19  = bus_i[17:16];
      end
    end
    if (rst) begin
      \$19  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$20  = request_start_buf;
    if (\$7 ) begin
      if (bus_i[32]) begin
        \$20  = bus_i[16];
      end
    end
    if (rst) begin
      \$20  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$6 ) begin end
    \$21  = request_stop_buf;
    if (\$8 ) begin
      if (bus_i[32]) begin
        \$21  = bus_i[16];
      end
    end
    if (rst) begin
      \$21  = 1'h0;
    end
  end
  assign \bus_o.addr  = bus_o[15:0];
  assign \bus_o.data  = bus_o[31:16];
  assign \bus_o.rw  = bus_o[32];
  assign \bus_o.valid  = bus_o[33];
  assign \bus_o.last  = bus_o[34];
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:213" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.sample_mem (\port$0$4 , \port$0$8 , \port$0$16 , clk, rst, user_addr, user_write_enable, bus_o, bus_i, \port$0$3 );
  reg \$auto$verilog_backend.cc:2352:dump_module$7  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire [16:0] \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire \$22 ;
  reg [34:0] \$23 ;
  reg [34:0] \$24 ;
  reg [34:0] \$25 ;
  reg [34:0] \$26 ;
  reg [7:0] \$27 ;
  reg [7:0] \$28 ;
  wire \$3 ;
  wire \$4 ;
  wire [16:0] \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  reg [7:0] \$memory_r_addr  = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  reg [7:0] \$memory_r_addr$9  = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  wire [15:0] \$memory_r_data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  wire [12:0] \$memory_r_data$10 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  wire \$memory_r_en ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  wire \$memory_r_en$12 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  wire [7:0] \$memory_w_addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  wire [7:0] \$memory_w_addr$19 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  wire [15:0] \$memory_w_data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  wire [12:0] \$memory_w_data$20 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  wire \$memory_w_en ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  wire \$memory_w_en$21 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  reg [34:0] \$signal  = 35'h000000000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  reg [34:0] \$signal$4  = 35'h000000000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire [15:0] \$signal$4.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire [15:0] \$signal$4.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal$4.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal$4.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal$4.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  reg [34:0] \$signal$5  = 35'h000000000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire [15:0] \$signal$5.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire [15:0] \$signal$5.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal$5.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal$5.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal$5.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire [15:0] \$signal.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire [15:0] \$signal.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  wire \$signal.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  input [34:0] bus_i;
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:29" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  output [34:0] bus_o;
  reg [34:0] bus_o = 35'h000000000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  input [15:0] \port$0$16 ;
  wire [15:0] \port$0$16 ;
  input \port$0$3 ;
  wire \port$0$3 ;
  input [3:0] \port$0$4 ;
  wire [3:0] \port$0$4 ;
  input [7:0] \port$0$8 ;
  wire [7:0] \port$0$8 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  input [7:0] user_addr;
  wire [7:0] user_addr;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:35" *)
  wire [28:0] user_data_in;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:196" *)
  input user_write_enable;
  wire user_write_enable;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:68" *)
  reg [15:0] mem_0 [255:0];
  initial begin
    mem_0[0] = 16'h0000;
    mem_0[1] = 16'h0000;
    mem_0[2] = 16'h0000;
    mem_0[3] = 16'h0000;
    mem_0[4] = 16'h0000;
    mem_0[5] = 16'h0000;
    mem_0[6] = 16'h0000;
    mem_0[7] = 16'h0000;
    mem_0[8] = 16'h0000;
    mem_0[9] = 16'h0000;
    mem_0[10] = 16'h0000;
    mem_0[11] = 16'h0000;
    mem_0[12] = 16'h0000;
    mem_0[13] = 16'h0000;
    mem_0[14] = 16'h0000;
    mem_0[15] = 16'h0000;
    mem_0[16] = 16'h0000;
    mem_0[17] = 16'h0000;
    mem_0[18] = 16'h0000;
    mem_0[19] = 16'h0000;
    mem_0[20] = 16'h0000;
    mem_0[21] = 16'h0000;
    mem_0[22] = 16'h0000;
    mem_0[23] = 16'h0000;
    mem_0[24] = 16'h0000;
    mem_0[25] = 16'h0000;
    mem_0[26] = 16'h0000;
    mem_0[27] = 16'h0000;
    mem_0[28] = 16'h0000;
    mem_0[29] = 16'h0000;
    mem_0[30] = 16'h0000;
    mem_0[31] = 16'h0000;
    mem_0[32] = 16'h0000;
    mem_0[33] = 16'h0000;
    mem_0[34] = 16'h0000;
    mem_0[35] = 16'h0000;
    mem_0[36] = 16'h0000;
    mem_0[37] = 16'h0000;
    mem_0[38] = 16'h0000;
    mem_0[39] = 16'h0000;
    mem_0[40] = 16'h0000;
    mem_0[41] = 16'h0000;
    mem_0[42] = 16'h0000;
    mem_0[43] = 16'h0000;
    mem_0[44] = 16'h0000;
    mem_0[45] = 16'h0000;
    mem_0[46] = 16'h0000;
    mem_0[47] = 16'h0000;
    mem_0[48] = 16'h0000;
    mem_0[49] = 16'h0000;
    mem_0[50] = 16'h0000;
    mem_0[51] = 16'h0000;
    mem_0[52] = 16'h0000;
    mem_0[53] = 16'h0000;
    mem_0[54] = 16'h0000;
    mem_0[55] = 16'h0000;
    mem_0[56] = 16'h0000;
    mem_0[57] = 16'h0000;
    mem_0[58] = 16'h0000;
    mem_0[59] = 16'h0000;
    mem_0[60] = 16'h0000;
    mem_0[61] = 16'h0000;
    mem_0[62] = 16'h0000;
    mem_0[63] = 16'h0000;
    mem_0[64] = 16'h0000;
    mem_0[65] = 16'h0000;
    mem_0[66] = 16'h0000;
    mem_0[67] = 16'h0000;
    mem_0[68] = 16'h0000;
    mem_0[69] = 16'h0000;
    mem_0[70] = 16'h0000;
    mem_0[71] = 16'h0000;
    mem_0[72] = 16'h0000;
    mem_0[73] = 16'h0000;
    mem_0[74] = 16'h0000;
    mem_0[75] = 16'h0000;
    mem_0[76] = 16'h0000;
    mem_0[77] = 16'h0000;
    mem_0[78] = 16'h0000;
    mem_0[79] = 16'h0000;
    mem_0[80] = 16'h0000;
    mem_0[81] = 16'h0000;
    mem_0[82] = 16'h0000;
    mem_0[83] = 16'h0000;
    mem_0[84] = 16'h0000;
    mem_0[85] = 16'h0000;
    mem_0[86] = 16'h0000;
    mem_0[87] = 16'h0000;
    mem_0[88] = 16'h0000;
    mem_0[89] = 16'h0000;
    mem_0[90] = 16'h0000;
    mem_0[91] = 16'h0000;
    mem_0[92] = 16'h0000;
    mem_0[93] = 16'h0000;
    mem_0[94] = 16'h0000;
    mem_0[95] = 16'h0000;
    mem_0[96] = 16'h0000;
    mem_0[97] = 16'h0000;
    mem_0[98] = 16'h0000;
    mem_0[99] = 16'h0000;
    mem_0[100] = 16'h0000;
    mem_0[101] = 16'h0000;
    mem_0[102] = 16'h0000;
    mem_0[103] = 16'h0000;
    mem_0[104] = 16'h0000;
    mem_0[105] = 16'h0000;
    mem_0[106] = 16'h0000;
    mem_0[107] = 16'h0000;
    mem_0[108] = 16'h0000;
    mem_0[109] = 16'h0000;
    mem_0[110] = 16'h0000;
    mem_0[111] = 16'h0000;
    mem_0[112] = 16'h0000;
    mem_0[113] = 16'h0000;
    mem_0[114] = 16'h0000;
    mem_0[115] = 16'h0000;
    mem_0[116] = 16'h0000;
    mem_0[117] = 16'h0000;
    mem_0[118] = 16'h0000;
    mem_0[119] = 16'h0000;
    mem_0[120] = 16'h0000;
    mem_0[121] = 16'h0000;
    mem_0[122] = 16'h0000;
    mem_0[123] = 16'h0000;
    mem_0[124] = 16'h0000;
    mem_0[125] = 16'h0000;
    mem_0[126] = 16'h0000;
    mem_0[127] = 16'h0000;
    mem_0[128] = 16'h0000;
    mem_0[129] = 16'h0000;
    mem_0[130] = 16'h0000;
    mem_0[131] = 16'h0000;
    mem_0[132] = 16'h0000;
    mem_0[133] = 16'h0000;
    mem_0[134] = 16'h0000;
    mem_0[135] = 16'h0000;
    mem_0[136] = 16'h0000;
    mem_0[137] = 16'h0000;
    mem_0[138] = 16'h0000;
    mem_0[139] = 16'h0000;
    mem_0[140] = 16'h0000;
    mem_0[141] = 16'h0000;
    mem_0[142] = 16'h0000;
    mem_0[143] = 16'h0000;
    mem_0[144] = 16'h0000;
    mem_0[145] = 16'h0000;
    mem_0[146] = 16'h0000;
    mem_0[147] = 16'h0000;
    mem_0[148] = 16'h0000;
    mem_0[149] = 16'h0000;
    mem_0[150] = 16'h0000;
    mem_0[151] = 16'h0000;
    mem_0[152] = 16'h0000;
    mem_0[153] = 16'h0000;
    mem_0[154] = 16'h0000;
    mem_0[155] = 16'h0000;
    mem_0[156] = 16'h0000;
    mem_0[157] = 16'h0000;
    mem_0[158] = 16'h0000;
    mem_0[159] = 16'h0000;
    mem_0[160] = 16'h0000;
    mem_0[161] = 16'h0000;
    mem_0[162] = 16'h0000;
    mem_0[163] = 16'h0000;
    mem_0[164] = 16'h0000;
    mem_0[165] = 16'h0000;
    mem_0[166] = 16'h0000;
    mem_0[167] = 16'h0000;
    mem_0[168] = 16'h0000;
    mem_0[169] = 16'h0000;
    mem_0[170] = 16'h0000;
    mem_0[171] = 16'h0000;
    mem_0[172] = 16'h0000;
    mem_0[173] = 16'h0000;
    mem_0[174] = 16'h0000;
    mem_0[175] = 16'h0000;
    mem_0[176] = 16'h0000;
    mem_0[177] = 16'h0000;
    mem_0[178] = 16'h0000;
    mem_0[179] = 16'h0000;
    mem_0[180] = 16'h0000;
    mem_0[181] = 16'h0000;
    mem_0[182] = 16'h0000;
    mem_0[183] = 16'h0000;
    mem_0[184] = 16'h0000;
    mem_0[185] = 16'h0000;
    mem_0[186] = 16'h0000;
    mem_0[187] = 16'h0000;
    mem_0[188] = 16'h0000;
    mem_0[189] = 16'h0000;
    mem_0[190] = 16'h0000;
    mem_0[191] = 16'h0000;
    mem_0[192] = 16'h0000;
    mem_0[193] = 16'h0000;
    mem_0[194] = 16'h0000;
    mem_0[195] = 16'h0000;
    mem_0[196] = 16'h0000;
    mem_0[197] = 16'h0000;
    mem_0[198] = 16'h0000;
    mem_0[199] = 16'h0000;
    mem_0[200] = 16'h0000;
    mem_0[201] = 16'h0000;
    mem_0[202] = 16'h0000;
    mem_0[203] = 16'h0000;
    mem_0[204] = 16'h0000;
    mem_0[205] = 16'h0000;
    mem_0[206] = 16'h0000;
    mem_0[207] = 16'h0000;
    mem_0[208] = 16'h0000;
    mem_0[209] = 16'h0000;
    mem_0[210] = 16'h0000;
    mem_0[211] = 16'h0000;
    mem_0[212] = 16'h0000;
    mem_0[213] = 16'h0000;
    mem_0[214] = 16'h0000;
    mem_0[215] = 16'h0000;
    mem_0[216] = 16'h0000;
    mem_0[217] = 16'h0000;
    mem_0[218] = 16'h0000;
    mem_0[219] = 16'h0000;
    mem_0[220] = 16'h0000;
    mem_0[221] = 16'h0000;
    mem_0[222] = 16'h0000;
    mem_0[223] = 16'h0000;
    mem_0[224] = 16'h0000;
    mem_0[225] = 16'h0000;
    mem_0[226] = 16'h0000;
    mem_0[227] = 16'h0000;
    mem_0[228] = 16'h0000;
    mem_0[229] = 16'h0000;
    mem_0[230] = 16'h0000;
    mem_0[231] = 16'h0000;
    mem_0[232] = 16'h0000;
    mem_0[233] = 16'h0000;
    mem_0[234] = 16'h0000;
    mem_0[235] = 16'h0000;
    mem_0[236] = 16'h0000;
    mem_0[237] = 16'h0000;
    mem_0[238] = 16'h0000;
    mem_0[239] = 16'h0000;
    mem_0[240] = 16'h0000;
    mem_0[241] = 16'h0000;
    mem_0[242] = 16'h0000;
    mem_0[243] = 16'h0000;
    mem_0[244] = 16'h0000;
    mem_0[245] = 16'h0000;
    mem_0[246] = 16'h0000;
    mem_0[247] = 16'h0000;
    mem_0[248] = 16'h0000;
    mem_0[249] = 16'h0000;
    mem_0[250] = 16'h0000;
    mem_0[251] = 16'h0000;
    mem_0[252] = 16'h0000;
    mem_0[253] = 16'h0000;
    mem_0[254] = 16'h0000;
    mem_0[255] = 16'h0000;
  end
  always @(posedge clk) begin
    if (user_write_enable)
      mem_0[user_addr] <= \port$0$16 ;
  end
  reg [15:0] _0_;
  always @(posedge clk) begin
    _0_ <= mem_0[\$memory_r_addr ];
    if (user_write_enable && \$memory_r_addr  == user_addr)
      _0_ <= \port$0$16 ;
  end
  initial _0_ = 16'h0000;
  assign \$memory_r_data  = _0_;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:73" *)
  reg [12:0] mem_1 [255:0];
  initial begin
    mem_1[0] = 13'h0000;
    mem_1[1] = 13'h0000;
    mem_1[2] = 13'h0000;
    mem_1[3] = 13'h0000;
    mem_1[4] = 13'h0000;
    mem_1[5] = 13'h0000;
    mem_1[6] = 13'h0000;
    mem_1[7] = 13'h0000;
    mem_1[8] = 13'h0000;
    mem_1[9] = 13'h0000;
    mem_1[10] = 13'h0000;
    mem_1[11] = 13'h0000;
    mem_1[12] = 13'h0000;
    mem_1[13] = 13'h0000;
    mem_1[14] = 13'h0000;
    mem_1[15] = 13'h0000;
    mem_1[16] = 13'h0000;
    mem_1[17] = 13'h0000;
    mem_1[18] = 13'h0000;
    mem_1[19] = 13'h0000;
    mem_1[20] = 13'h0000;
    mem_1[21] = 13'h0000;
    mem_1[22] = 13'h0000;
    mem_1[23] = 13'h0000;
    mem_1[24] = 13'h0000;
    mem_1[25] = 13'h0000;
    mem_1[26] = 13'h0000;
    mem_1[27] = 13'h0000;
    mem_1[28] = 13'h0000;
    mem_1[29] = 13'h0000;
    mem_1[30] = 13'h0000;
    mem_1[31] = 13'h0000;
    mem_1[32] = 13'h0000;
    mem_1[33] = 13'h0000;
    mem_1[34] = 13'h0000;
    mem_1[35] = 13'h0000;
    mem_1[36] = 13'h0000;
    mem_1[37] = 13'h0000;
    mem_1[38] = 13'h0000;
    mem_1[39] = 13'h0000;
    mem_1[40] = 13'h0000;
    mem_1[41] = 13'h0000;
    mem_1[42] = 13'h0000;
    mem_1[43] = 13'h0000;
    mem_1[44] = 13'h0000;
    mem_1[45] = 13'h0000;
    mem_1[46] = 13'h0000;
    mem_1[47] = 13'h0000;
    mem_1[48] = 13'h0000;
    mem_1[49] = 13'h0000;
    mem_1[50] = 13'h0000;
    mem_1[51] = 13'h0000;
    mem_1[52] = 13'h0000;
    mem_1[53] = 13'h0000;
    mem_1[54] = 13'h0000;
    mem_1[55] = 13'h0000;
    mem_1[56] = 13'h0000;
    mem_1[57] = 13'h0000;
    mem_1[58] = 13'h0000;
    mem_1[59] = 13'h0000;
    mem_1[60] = 13'h0000;
    mem_1[61] = 13'h0000;
    mem_1[62] = 13'h0000;
    mem_1[63] = 13'h0000;
    mem_1[64] = 13'h0000;
    mem_1[65] = 13'h0000;
    mem_1[66] = 13'h0000;
    mem_1[67] = 13'h0000;
    mem_1[68] = 13'h0000;
    mem_1[69] = 13'h0000;
    mem_1[70] = 13'h0000;
    mem_1[71] = 13'h0000;
    mem_1[72] = 13'h0000;
    mem_1[73] = 13'h0000;
    mem_1[74] = 13'h0000;
    mem_1[75] = 13'h0000;
    mem_1[76] = 13'h0000;
    mem_1[77] = 13'h0000;
    mem_1[78] = 13'h0000;
    mem_1[79] = 13'h0000;
    mem_1[80] = 13'h0000;
    mem_1[81] = 13'h0000;
    mem_1[82] = 13'h0000;
    mem_1[83] = 13'h0000;
    mem_1[84] = 13'h0000;
    mem_1[85] = 13'h0000;
    mem_1[86] = 13'h0000;
    mem_1[87] = 13'h0000;
    mem_1[88] = 13'h0000;
    mem_1[89] = 13'h0000;
    mem_1[90] = 13'h0000;
    mem_1[91] = 13'h0000;
    mem_1[92] = 13'h0000;
    mem_1[93] = 13'h0000;
    mem_1[94] = 13'h0000;
    mem_1[95] = 13'h0000;
    mem_1[96] = 13'h0000;
    mem_1[97] = 13'h0000;
    mem_1[98] = 13'h0000;
    mem_1[99] = 13'h0000;
    mem_1[100] = 13'h0000;
    mem_1[101] = 13'h0000;
    mem_1[102] = 13'h0000;
    mem_1[103] = 13'h0000;
    mem_1[104] = 13'h0000;
    mem_1[105] = 13'h0000;
    mem_1[106] = 13'h0000;
    mem_1[107] = 13'h0000;
    mem_1[108] = 13'h0000;
    mem_1[109] = 13'h0000;
    mem_1[110] = 13'h0000;
    mem_1[111] = 13'h0000;
    mem_1[112] = 13'h0000;
    mem_1[113] = 13'h0000;
    mem_1[114] = 13'h0000;
    mem_1[115] = 13'h0000;
    mem_1[116] = 13'h0000;
    mem_1[117] = 13'h0000;
    mem_1[118] = 13'h0000;
    mem_1[119] = 13'h0000;
    mem_1[120] = 13'h0000;
    mem_1[121] = 13'h0000;
    mem_1[122] = 13'h0000;
    mem_1[123] = 13'h0000;
    mem_1[124] = 13'h0000;
    mem_1[125] = 13'h0000;
    mem_1[126] = 13'h0000;
    mem_1[127] = 13'h0000;
    mem_1[128] = 13'h0000;
    mem_1[129] = 13'h0000;
    mem_1[130] = 13'h0000;
    mem_1[131] = 13'h0000;
    mem_1[132] = 13'h0000;
    mem_1[133] = 13'h0000;
    mem_1[134] = 13'h0000;
    mem_1[135] = 13'h0000;
    mem_1[136] = 13'h0000;
    mem_1[137] = 13'h0000;
    mem_1[138] = 13'h0000;
    mem_1[139] = 13'h0000;
    mem_1[140] = 13'h0000;
    mem_1[141] = 13'h0000;
    mem_1[142] = 13'h0000;
    mem_1[143] = 13'h0000;
    mem_1[144] = 13'h0000;
    mem_1[145] = 13'h0000;
    mem_1[146] = 13'h0000;
    mem_1[147] = 13'h0000;
    mem_1[148] = 13'h0000;
    mem_1[149] = 13'h0000;
    mem_1[150] = 13'h0000;
    mem_1[151] = 13'h0000;
    mem_1[152] = 13'h0000;
    mem_1[153] = 13'h0000;
    mem_1[154] = 13'h0000;
    mem_1[155] = 13'h0000;
    mem_1[156] = 13'h0000;
    mem_1[157] = 13'h0000;
    mem_1[158] = 13'h0000;
    mem_1[159] = 13'h0000;
    mem_1[160] = 13'h0000;
    mem_1[161] = 13'h0000;
    mem_1[162] = 13'h0000;
    mem_1[163] = 13'h0000;
    mem_1[164] = 13'h0000;
    mem_1[165] = 13'h0000;
    mem_1[166] = 13'h0000;
    mem_1[167] = 13'h0000;
    mem_1[168] = 13'h0000;
    mem_1[169] = 13'h0000;
    mem_1[170] = 13'h0000;
    mem_1[171] = 13'h0000;
    mem_1[172] = 13'h0000;
    mem_1[173] = 13'h0000;
    mem_1[174] = 13'h0000;
    mem_1[175] = 13'h0000;
    mem_1[176] = 13'h0000;
    mem_1[177] = 13'h0000;
    mem_1[178] = 13'h0000;
    mem_1[179] = 13'h0000;
    mem_1[180] = 13'h0000;
    mem_1[181] = 13'h0000;
    mem_1[182] = 13'h0000;
    mem_1[183] = 13'h0000;
    mem_1[184] = 13'h0000;
    mem_1[185] = 13'h0000;
    mem_1[186] = 13'h0000;
    mem_1[187] = 13'h0000;
    mem_1[188] = 13'h0000;
    mem_1[189] = 13'h0000;
    mem_1[190] = 13'h0000;
    mem_1[191] = 13'h0000;
    mem_1[192] = 13'h0000;
    mem_1[193] = 13'h0000;
    mem_1[194] = 13'h0000;
    mem_1[195] = 13'h0000;
    mem_1[196] = 13'h0000;
    mem_1[197] = 13'h0000;
    mem_1[198] = 13'h0000;
    mem_1[199] = 13'h0000;
    mem_1[200] = 13'h0000;
    mem_1[201] = 13'h0000;
    mem_1[202] = 13'h0000;
    mem_1[203] = 13'h0000;
    mem_1[204] = 13'h0000;
    mem_1[205] = 13'h0000;
    mem_1[206] = 13'h0000;
    mem_1[207] = 13'h0000;
    mem_1[208] = 13'h0000;
    mem_1[209] = 13'h0000;
    mem_1[210] = 13'h0000;
    mem_1[211] = 13'h0000;
    mem_1[212] = 13'h0000;
    mem_1[213] = 13'h0000;
    mem_1[214] = 13'h0000;
    mem_1[215] = 13'h0000;
    mem_1[216] = 13'h0000;
    mem_1[217] = 13'h0000;
    mem_1[218] = 13'h0000;
    mem_1[219] = 13'h0000;
    mem_1[220] = 13'h0000;
    mem_1[221] = 13'h0000;
    mem_1[222] = 13'h0000;
    mem_1[223] = 13'h0000;
    mem_1[224] = 13'h0000;
    mem_1[225] = 13'h0000;
    mem_1[226] = 13'h0000;
    mem_1[227] = 13'h0000;
    mem_1[228] = 13'h0000;
    mem_1[229] = 13'h0000;
    mem_1[230] = 13'h0000;
    mem_1[231] = 13'h0000;
    mem_1[232] = 13'h0000;
    mem_1[233] = 13'h0000;
    mem_1[234] = 13'h0000;
    mem_1[235] = 13'h0000;
    mem_1[236] = 13'h0000;
    mem_1[237] = 13'h0000;
    mem_1[238] = 13'h0000;
    mem_1[239] = 13'h0000;
    mem_1[240] = 13'h0000;
    mem_1[241] = 13'h0000;
    mem_1[242] = 13'h0000;
    mem_1[243] = 13'h0000;
    mem_1[244] = 13'h0000;
    mem_1[245] = 13'h0000;
    mem_1[246] = 13'h0000;
    mem_1[247] = 13'h0000;
    mem_1[248] = 13'h0000;
    mem_1[249] = 13'h0000;
    mem_1[250] = 13'h0000;
    mem_1[251] = 13'h0000;
    mem_1[252] = 13'h0000;
    mem_1[253] = 13'h0000;
    mem_1[254] = 13'h0000;
    mem_1[255] = 13'h0000;
  end
  always @(posedge clk) begin
    if (user_write_enable)
      mem_1[user_addr] <= { \port$0$3 , \port$0$4 , \port$0$8  };
  end
  reg [12:0] _1_;
  always @(posedge clk) begin
    _1_ <= mem_1[\$memory_r_addr$9 ];
    if (user_write_enable && \$memory_r_addr$9  == user_addr)
      _1_ <= { \port$0$3 , \port$0$4 , \port$0$8  };
  end
  initial _1_ = 13'h0000;
  assign \$memory_r_data$10  = _1_;
  assign \$1  = bus_i[15:0] >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:137" *) 5'h11;
  assign \$2  = bus_i[33] & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:136" *) \$1 ;
  assign \$3  = bus_i[15:0] <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:138" *) 9'h110;
  assign \$4  = \$2  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:136" *) \$3 ;
  assign \$5  = bus_i[15:0] - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:140" *) 5'h11;
  assign \$6  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:145" *) \$signal$5 [32];
  assign \$7  = \$signal$5 [33] & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:144" *) \$6 ;
  assign \$8  = \$signal$5 [15:0] >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:146" *) 5'h11;
  assign \$9  = \$7  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:144" *) \$8 ;
  assign \$10  = \$signal$5 [15:0] <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:147" *) 9'h110;
  assign \$11  = \$9  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:144" *) \$10 ;
  assign \$12  = bus_i[15:0] >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:137" *) 9'h111;
  assign \$13  = bus_i[33] & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:136" *) \$12 ;
  assign \$14  = bus_i[15:0] <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:138" *) 10'h210;
  assign \$15  = \$13  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:136" *) \$14 ;
  assign \$16  = bus_i[15:0] - (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:140" *) 9'h111;
  assign \$17  = ~ (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:145" *) \$signal$5 [32];
  assign \$18  = \$signal$5 [33] & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:144" *) \$17 ;
  assign \$19  = \$signal$5 [15:0] >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:146" *) 9'h111;
  assign \$20  = \$18  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:144" *) \$19 ;
  assign \$21  = \$signal$5 [15:0] <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:147" *) 10'h210;
  assign \$22  = \$20  & (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:144" *) \$21 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  always @(posedge clk)
    \$signal  <= \$23 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  always @(posedge clk)
    \$signal$4  <= \$24 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:220" *)
  always @(posedge clk)
    \$signal$5  <= \$25 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:30" *)
  always @(posedge clk)
    bus_o <= \$26 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  always @(posedge clk)
    \$memory_r_addr  <= \$27 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/memory_core.py:131" *)
  always @(posedge clk)
    \$memory_r_addr$9  <= \$28 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$23  = bus_i;
    if (rst) begin
      \$23  = 35'h000000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$24  = \$signal ;
    if (rst) begin
      \$24  = 35'h000000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$25  = \$signal$4 ;
    if (rst) begin
      \$25  = 35'h000000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$26  = \$signal$5 ;
    if (\$11 ) begin
      \$26 [31:16] = \$memory_r_data ;
    end
    if (\$22 ) begin
      \$26 [31:16] = { 3'h0, \$memory_r_data$10  };
    end
    if (rst) begin
      \$26  = 35'h000000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$27  = \$memory_r_addr ;
    if (\$4 ) begin
      \$27  = \$5 [7:0];
    end
    if (rst) begin
      \$27  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$7 ) begin end
    \$28  = \$memory_r_addr$9 ;
    if (\$15 ) begin
      \$28  = \$16 [7:0];
    end
    if (rst) begin
      \$28  = 8'h00;
    end
  end
  assign \$memory_r_en  = 1'h1;
  assign \$memory_r_en$12  = 1'h1;
  assign \$memory_w_addr  = user_addr;
  assign \$memory_w_data  = \port$0$16 ;
  assign user_data_in = { \port$0$3 , \port$0$4 , \port$0$8 , \port$0$16  };
  assign \$memory_w_en  = user_write_enable;
  assign \$memory_w_addr$19  = user_addr;
  assign \$memory_w_data$20  = { \port$0$3 , \port$0$4 , \port$0$8  };
  assign \$memory_w_en$21  = user_write_enable;
  assign \$signal.addr  = \$signal [15:0];
  assign \$signal.data  = \$signal [31:16];
  assign \$signal.rw  = \$signal [32];
  assign \$signal.valid  = \$signal [33];
  assign \$signal.last  = \$signal [34];
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
  assign \$signal$4.addr  = \$signal$4 [15:0];
  assign \$signal$4.data  = \$signal$4 [31:16];
  assign \$signal$4.rw  = \$signal$4 [32];
  assign \$signal$4.valid  = \$signal$4 [33];
  assign \$signal$4.last  = \$signal$4 [34];
  assign \$signal$5.addr  = \$signal$5 [15:0];
  assign \$signal$5.data  = \$signal$5 [31:16];
  assign \$signal$5.rw  = \$signal$5 [32];
  assign \$signal$5.valid  = \$signal$5 [33];
  assign \$signal$5.last  = \$signal$5 [34];
  assign \bus_o.addr  = bus_o[15:0];
  assign \bus_o.data  = bus_o[31:16];
  assign \bus_o.rw  = bus_o[32];
  assign \bus_o.valid  = bus_o[33];
  assign \bus_o.last  = bus_o[34];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:62" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.trig_blk (probe1, probe2, probe3, clk, rst, trig, bus_i, bus_o, probe0);
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  input [34:0] bus_i;
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  output [34:0] bus_o;
  wire [34:0] bus_o;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input probe0;
  wire probe0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  wire probe0_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  wire [3:0] probe0_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [3:0] probe1;
  wire [3:0] probe1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  wire [3:0] probe1_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  wire [3:0] probe1_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [7:0] probe2;
  wire [7:0] probe2;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  wire [7:0] probe2_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  wire [3:0] probe2_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [15:0] probe3;
  wire [15:0] probe3;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  wire [15:0] probe3_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  wire [3:0] probe3_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:29" *)
  output trig;
  wire trig;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  wire triggered;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  wire \triggered$2 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  wire \triggered$3 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  wire \triggered$4 ;
  assign trig = | (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:71" *) { \triggered$4 , \triggered$3 , \triggered$2 , triggered };
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:69" *)
  \manta.my_logic_analyzer.trig_blk.probe0_trigger  probe0_trigger (
    .clk(clk),
    .probe0(probe0),
    .probe0_arg(probe0_arg),
    .probe0_op(probe0_op),
    .rst(rst),
    .triggered(triggered)
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:69" *)
  \manta.my_logic_analyzer.trig_blk.probe1_trigger  probe1_trigger (
    .clk(clk),
    .probe1(probe1),
    .probe1_arg(probe1_arg),
    .probe1_op(probe1_op),
    .rst(rst),
    .triggered(\triggered$2 )
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:69" *)
  \manta.my_logic_analyzer.trig_blk.probe2_trigger  probe2_trigger (
    .clk(clk),
    .probe2(probe2),
    .probe2_arg(probe2_arg),
    .probe2_op(probe2_op),
    .rst(rst),
    .triggered(\triggered$3 )
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:69" *)
  \manta.my_logic_analyzer.trig_blk.probe3_trigger  probe3_trigger (
    .clk(clk),
    .probe3(probe3),
    .probe3_arg(probe3_arg),
    .probe3_op(probe3_op),
    .rst(rst),
    .triggered(\triggered$4 )
  );
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:65" *)
  \manta.my_logic_analyzer.trig_blk.registers  registers (
    .bus_i(bus_i),
    .bus_o(bus_o),
    .clk(clk),
    .probe0_arg(probe0_arg),
    .probe0_op(probe0_op),
    .probe1_arg(probe1_arg),
    .probe1_op(probe1_op),
    .probe2_arg(probe2_arg),
    .probe2_op(probe2_op),
    .probe3_arg(probe3_arg),
    .probe3_op(probe3_op),
    .rst(rst)
  );
  assign \bus_o.addr  = bus_o[15:0];
  assign \bus_o.data  = bus_o[31:16];
  assign \bus_o.rw  = bus_o[32];
  assign \bus_o.valid  = bus_o[33];
  assign \bus_o.last  = bus_o[34];
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:103" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.trig_blk.probe0_trigger (clk, rst, probe0_op, probe0_arg, triggered, probe0);
  reg \$auto$verilog_backend.cc:2352:dump_module$8  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  reg \$20 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  reg prev = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input probe0;
  wire probe0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  input probe0_arg;
  wire probe0_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  input [3:0] probe0_op;
  wire [3:0] probe0_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  output triggered;
  reg triggered;
  assign \$1  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:109" *) probe0_op;
  assign \$2  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:112" *) 1'h1;
  assign \$3  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:115" *) 2'h2;
  assign \$4  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:118" *) 2'h3;
  assign \$5  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:121" *) 3'h4;
  assign \$6  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:124" *) 3'h5;
  assign \$7  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:127" *) 3'h6;
  assign \$8  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:130" *) 3'h7;
  assign \$9  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:133" *) 4'h8;
  assign \$10  = probe0_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:136" *) 4'h9;
  assign \$11  = probe0 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:113" *) prev;
  assign \$12  = probe0 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:116" *) prev;
  assign \$13  = probe0 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:119" *) prev;
  assign \$14  = probe0 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:122" *) probe0_arg;
  assign \$15  = probe0 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:125" *) probe0_arg;
  assign \$16  = probe0 >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:128" *) probe0_arg;
  assign \$17  = probe0 <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:131" *) probe0_arg;
  assign \$18  = probe0 == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:134" *) probe0_arg;
  assign \$19  = probe0 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:137" *) probe0_arg;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  always @(posedge clk)
    prev <= \$20 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    \$20  = probe0;
    if (rst) begin
      \$20  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$8 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      triggered = 1'h0;
    end else if (\$2 ) begin
      triggered = \$11 ;
    end else if (\$3 ) begin
      triggered = \$12 ;
    end else if (\$4 ) begin
      triggered = \$13 ;
    end else if (\$5 ) begin
      triggered = \$14 ;
    end else if (\$6 ) begin
      triggered = \$15 ;
    end else if (\$7 ) begin
      triggered = \$16 ;
    end else if (\$8 ) begin
      triggered = \$17 ;
    end else if (\$9 ) begin
      triggered = \$18 ;
    end else if (\$10 ) begin
      triggered = \$19 ;
    end else begin
      triggered = 1'h0;
    end
  end
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:103" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.trig_blk.probe1_trigger (clk, rst, probe1_op, probe1_arg, triggered, probe1);
  reg \$auto$verilog_backend.cc:2352:dump_module$9  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  reg [3:0] \$20 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  reg [3:0] prev = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [3:0] probe1;
  wire [3:0] probe1;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  input [3:0] probe1_arg;
  wire [3:0] probe1_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  input [3:0] probe1_op;
  wire [3:0] probe1_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  output triggered;
  reg triggered;
  assign \$1  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:109" *) probe1_op;
  assign \$2  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:112" *) 1'h1;
  assign \$3  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:115" *) 2'h2;
  assign \$4  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:118" *) 2'h3;
  assign \$5  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:121" *) 3'h4;
  assign \$6  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:124" *) 3'h5;
  assign \$7  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:127" *) 3'h6;
  assign \$8  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:130" *) 3'h7;
  assign \$9  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:133" *) 4'h8;
  assign \$10  = probe1_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:136" *) 4'h9;
  assign \$11  = probe1 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:113" *) prev;
  assign \$12  = probe1 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:116" *) prev;
  assign \$13  = probe1 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:119" *) prev;
  assign \$14  = probe1 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:122" *) probe1_arg;
  assign \$15  = probe1 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:125" *) probe1_arg;
  assign \$16  = probe1 >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:128" *) probe1_arg;
  assign \$17  = probe1 <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:131" *) probe1_arg;
  assign \$18  = probe1 == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:134" *) probe1_arg;
  assign \$19  = probe1 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:137" *) probe1_arg;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  always @(posedge clk)
    prev <= \$20 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    \$20  = probe1;
    if (rst) begin
      \$20  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$9 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      triggered = 1'h0;
    end else if (\$2 ) begin
      triggered = \$11 ;
    end else if (\$3 ) begin
      triggered = \$12 ;
    end else if (\$4 ) begin
      triggered = \$13 ;
    end else if (\$5 ) begin
      triggered = \$14 ;
    end else if (\$6 ) begin
      triggered = \$15 ;
    end else if (\$7 ) begin
      triggered = \$16 ;
    end else if (\$8 ) begin
      triggered = \$17 ;
    end else if (\$9 ) begin
      triggered = \$18 ;
    end else if (\$10 ) begin
      triggered = \$19 ;
    end else begin
      triggered = 1'h0;
    end
  end
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:103" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.trig_blk.probe2_trigger (clk, rst, probe2_op, probe2_arg, triggered, probe2);
  reg \$auto$verilog_backend.cc:2352:dump_module$10  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  reg [7:0] \$20 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  reg [7:0] prev = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [7:0] probe2;
  wire [7:0] probe2;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  input [7:0] probe2_arg;
  wire [7:0] probe2_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  input [3:0] probe2_op;
  wire [3:0] probe2_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  output triggered;
  reg triggered;
  assign \$1  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:109" *) probe2_op;
  assign \$2  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:112" *) 1'h1;
  assign \$3  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:115" *) 2'h2;
  assign \$4  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:118" *) 2'h3;
  assign \$5  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:121" *) 3'h4;
  assign \$6  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:124" *) 3'h5;
  assign \$7  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:127" *) 3'h6;
  assign \$8  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:130" *) 3'h7;
  assign \$9  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:133" *) 4'h8;
  assign \$10  = probe2_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:136" *) 4'h9;
  assign \$11  = probe2 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:113" *) prev;
  assign \$12  = probe2 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:116" *) prev;
  assign \$13  = probe2 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:119" *) prev;
  assign \$14  = probe2 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:122" *) probe2_arg;
  assign \$15  = probe2 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:125" *) probe2_arg;
  assign \$16  = probe2 >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:128" *) probe2_arg;
  assign \$17  = probe2 <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:131" *) probe2_arg;
  assign \$18  = probe2 == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:134" *) probe2_arg;
  assign \$19  = probe2 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:137" *) probe2_arg;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  always @(posedge clk)
    prev <= \$20 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    \$20  = probe2;
    if (rst) begin
      \$20  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$10 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      triggered = 1'h0;
    end else if (\$2 ) begin
      triggered = \$11 ;
    end else if (\$3 ) begin
      triggered = \$12 ;
    end else if (\$4 ) begin
      triggered = \$13 ;
    end else if (\$5 ) begin
      triggered = \$14 ;
    end else if (\$6 ) begin
      triggered = \$15 ;
    end else if (\$7 ) begin
      triggered = \$16 ;
    end else if (\$8 ) begin
      triggered = \$17 ;
    end else if (\$9 ) begin
      triggered = \$18 ;
    end else if (\$10 ) begin
      triggered = \$19 ;
    end else begin
      triggered = 1'h0;
    end
  end
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:103" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.trig_blk.probe3_trigger (clk, rst, probe3_op, probe3_arg, triggered, probe3);
  reg \$auto$verilog_backend.cc:2352:dump_module$11  = 0;
  wire \$1 ;
  wire \$10 ;
  wire \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire \$14 ;
  wire \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire \$18 ;
  wire \$19 ;
  wire \$2 ;
  reg [15:0] \$20 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  reg [15:0] prev = 16'h0000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/__init__.py:30" *)
  input [15:0] probe3;
  wire [15:0] probe3;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  input [15:0] probe3_arg;
  wire [15:0] probe3_arg;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  input [3:0] probe3_op;
  wire [3:0] probe3_op;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:100" *)
  output triggered;
  reg triggered;
  assign \$1  = ! (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:109" *) probe3_op;
  assign \$2  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:112" *) 1'h1;
  assign \$3  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:115" *) 2'h2;
  assign \$4  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:118" *) 2'h3;
  assign \$5  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:121" *) 3'h4;
  assign \$6  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:124" *) 3'h5;
  assign \$7  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:127" *) 3'h6;
  assign \$8  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:130" *) 3'h7;
  assign \$9  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:133" *) 4'h8;
  assign \$10  = probe3_op == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:136" *) 4'h9;
  assign \$11  = probe3 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:113" *) prev;
  assign \$12  = probe3 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:116" *) prev;
  assign \$13  = probe3 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:119" *) prev;
  assign \$14  = probe3 > (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:122" *) probe3_arg;
  assign \$15  = probe3 < (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:125" *) probe3_arg;
  assign \$16  = probe3 >= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:128" *) probe3_arg;
  assign \$17  = probe3 <= (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:131" *) probe3_arg;
  assign \$18  = probe3 == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:134" *) probe3_arg;
  assign \$19  = probe3 != (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:137" *) probe3_arg;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:106" *)
  always @(posedge clk)
    prev <= \$20 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    \$20  = probe3;
    if (rst) begin
      \$20  = 16'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$11 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      triggered = 1'h0;
    end else if (\$2 ) begin
      triggered = \$11 ;
    end else if (\$3 ) begin
      triggered = \$12 ;
    end else if (\$4 ) begin
      triggered = \$13 ;
    end else if (\$5 ) begin
      triggered = \$14 ;
    end else if (\$6 ) begin
      triggered = \$15 ;
    end else if (\$7 ) begin
      triggered = \$16 ;
    end else if (\$8 ) begin
      triggered = \$17 ;
    end else if (\$9 ) begin
      triggered = \$18 ;
    end else if (\$10 ) begin
      triggered = \$19 ;
    end else begin
      triggered = 1'h0;
    end
  end
endmodule

(* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:155" *)
(* generator = "Amaranth" *)
module \manta.my_logic_analyzer.trig_blk.registers (rst, bus_i, bus_o, probe0_op, probe1_op, probe2_op, probe3_op, probe0_arg, probe1_arg, probe2_arg, probe3_arg, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$12  = 0;
  wire \$1 ;
  reg [34:0] \$10 ;
  reg [3:0] \$11 ;
  reg [3:0] \$12 ;
  reg [3:0] \$13 ;
  reg [3:0] \$14 ;
  reg \$15 ;
  reg [3:0] \$16 ;
  reg [7:0] \$17 ;
  reg [15:0] \$18 ;
  reg \$19 ;
  wire \$2 ;
  reg [3:0] \$20 ;
  reg [3:0] \$21 ;
  reg [3:0] \$22 ;
  reg [3:0] \$23 ;
  reg \$24 ;
  reg [3:0] \$25 ;
  reg [7:0] \$26 ;
  reg [15:0] \$27 ;
  wire \$3 ;
  wire \$4 ;
  wire \$5 ;
  wire \$6 ;
  wire \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:29" *)
  reg _strobe = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  input [34:0] bus_i;
  wire [34:0] bus_i;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire [15:0] \bus_i.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:25" *)
  wire \bus_i.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  output [34:0] bus_o;
  reg [34:0] bus_o = 35'h000000000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.addr ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire [15:0] \bus_o.data ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.last ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.rw ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  wire \bus_o.valid ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input clk;
  wire clk;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  output probe0_arg;
  reg probe0_arg = 1'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg probe0_arg_buf = 1'h0;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  output [3:0] probe0_op;
  reg [3:0] probe0_op = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [3:0] probe0_op_buf = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  output [3:0] probe1_arg;
  reg [3:0] probe1_arg = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [3:0] probe1_arg_buf = 4'h0;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  output [3:0] probe1_op;
  reg [3:0] probe1_op = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [3:0] probe1_op_buf = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  output [7:0] probe2_arg;
  reg [7:0] probe2_arg = 8'h00;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [7:0] probe2_arg_buf = 8'h00;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  output [3:0] probe2_op;
  reg [3:0] probe2_op = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [3:0] probe2_op_buf = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  output [15:0] probe3_arg;
  reg [15:0] probe3_arg = 16'h0000;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [15:0] probe3_arg_buf = 16'h0000;
  (* enum_base_type = "Operations" *)
  (* enum_value_0000 = "DISABLE" *)
  (* enum_value_0001 = "RISING" *)
  (* enum_value_0010 = "FALLING" *)
  (* enum_value_0011 = "CHANGING" *)
  (* enum_value_0100 = "GT" *)
  (* enum_value_0101 = "LT" *)
  (* enum_value_0110 = "GEQ" *)
  (* enum_value_0111 = "LEQ" *)
  (* enum_value_1000 = "EQ" *)
  (* enum_value_1001 = "NEQ" *)
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  output [3:0] probe3_op;
  reg [3:0] probe3_op = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  reg [3:0] probe3_op_buf = 4'h0;
  (* src = "/home/user/.local/lib/python3.10/site-packages/amaranth/hdl/_ir.py:270" *)
  input rst;
  wire rst;
  assign \$1  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'h8;
  assign \$2  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'h9;
  assign \$3  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'ha;
  assign \$4  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'hb;
  assign \$5  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'hc;
  assign \$6  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'hd;
  assign \$7  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'he;
  assign \$8  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 4'hf;
  assign \$9  = bus_i[15:0] == (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:173" *) 5'h10;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:26" *)
  always @(posedge clk)
    bus_o <= \$10 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  always @(posedge clk)
    probe0_op <= \$11 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  always @(posedge clk)
    probe1_op <= \$12 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  always @(posedge clk)
    probe2_op <= \$13 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:98" *)
  always @(posedge clk)
    probe3_op <= \$14 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  always @(posedge clk)
    probe0_arg <= \$15 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  always @(posedge clk)
    probe1_arg <= \$16 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  always @(posedge clk)
    probe2_arg <= \$17 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/logic_analyzer/trigger_block.py:99" *)
  always @(posedge clk)
    probe3_arg <= \$18 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:29" *)
  always @(posedge clk)
    _strobe <= \$19 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe0_op_buf <= \$20 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe1_op_buf <= \$21 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe2_op_buf <= \$22 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe3_op_buf <= \$23 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe0_arg_buf <= \$24 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe1_arg_buf <= \$25 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe2_arg_buf <= \$26 ;
  (* src = "/home/user/.local/lib/python3.10/site-packages/manta/io_core.py:32" *)
  always @(posedge clk)
    probe3_arg_buf <= \$27 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$10  = bus_i;
    if (\$1 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 15'h0000, _strobe };
      end
    end
    if (\$2 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 12'h000, probe0_op_buf };
      end
    end
    if (\$3 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 12'h000, probe1_op_buf };
      end
    end
    if (\$4 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 12'h000, probe2_op_buf };
      end
    end
    if (\$5 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 12'h000, probe3_op_buf };
      end
    end
    if (\$6 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 15'h0000, probe0_arg_buf };
      end
    end
    if (\$7 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 12'h000, probe1_arg_buf };
      end
    end
    if (\$8 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = { 8'h00, probe2_arg_buf };
      end
    end
    if (\$9 ) begin
      (* full_case = 32'd1 *)
      if (bus_i[32]) begin
      end else begin
        \$10 [31:16] = probe3_arg_buf;
      end
    end
    if (rst) begin
      \$10  = 35'h000000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$11  = probe0_op;
    if (_strobe) begin
      \$11  = probe0_op_buf;
    end
    if (rst) begin
      \$11  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$12  = probe1_op;
    if (_strobe) begin
      \$12  = probe1_op_buf;
    end
    if (rst) begin
      \$12  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$13  = probe2_op;
    if (_strobe) begin
      \$13  = probe2_op_buf;
    end
    if (rst) begin
      \$13  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$14  = probe3_op;
    if (_strobe) begin
      \$14  = probe3_op_buf;
    end
    if (rst) begin
      \$14  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$15  = probe0_arg;
    if (_strobe) begin
      \$15  = probe0_arg_buf;
    end
    if (rst) begin
      \$15  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$16  = probe1_arg;
    if (_strobe) begin
      \$16  = probe1_arg_buf;
    end
    if (rst) begin
      \$16  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$17  = probe2_arg;
    if (_strobe) begin
      \$17  = probe2_arg_buf;
    end
    if (rst) begin
      \$17  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$18  = probe3_arg;
    if (_strobe) begin
      \$18  = probe3_arg_buf;
    end
    if (rst) begin
      \$18  = 16'h0000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$19  = _strobe;
    if (\$1 ) begin
      if (bus_i[32]) begin
        \$19  = bus_i[16];
      end
    end
    if (rst) begin
      \$19  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$20  = probe0_op_buf;
    if (\$2 ) begin
      if (bus_i[32]) begin
        \$20  = bus_i[19:16];
      end
    end
    if (rst) begin
      \$20  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$21  = probe1_op_buf;
    if (\$3 ) begin
      if (bus_i[32]) begin
        \$21  = bus_i[19:16];
      end
    end
    if (rst) begin
      \$21  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$22  = probe2_op_buf;
    if (\$4 ) begin
      if (bus_i[32]) begin
        \$22  = bus_i[19:16];
      end
    end
    if (rst) begin
      \$22  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$23  = probe3_op_buf;
    if (\$5 ) begin
      if (bus_i[32]) begin
        \$23  = bus_i[19:16];
      end
    end
    if (rst) begin
      \$23  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$24  = probe0_arg_buf;
    if (\$6 ) begin
      if (bus_i[32]) begin
        \$24  = bus_i[16];
      end
    end
    if (rst) begin
      \$24  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$25  = probe1_arg_buf;
    if (\$7 ) begin
      if (bus_i[32]) begin
        \$25  = bus_i[19:16];
      end
    end
    if (rst) begin
      \$25  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$26  = probe2_arg_buf;
    if (\$8 ) begin
      if (bus_i[32]) begin
        \$26  = bus_i[23:16];
      end
    end
    if (rst) begin
      \$26  = 8'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$12 ) begin end
    \$27  = probe3_arg_buf;
    if (\$9 ) begin
      if (bus_i[32]) begin
        \$27  = bus_i[31:16];
      end
    end
    if (rst) begin
      \$27  = 16'h0000;
    end
  end
  assign \bus_o.addr  = bus_o[15:0];
  assign \bus_o.data  = bus_o[31:16];
  assign \bus_o.rw  = bus_o[32];
  assign \bus_o.valid  = bus_o[33];
  assign \bus_o.last  = bus_o[34];
  assign \bus_i.addr  = bus_i[15:0];
  assign \bus_i.data  = bus_i[31:16];
  assign \bus_i.rw  = bus_i[32];
  assign \bus_i.valid  = bus_i[33];
  assign \bus_i.last  = bus_i[34];
endmodule
