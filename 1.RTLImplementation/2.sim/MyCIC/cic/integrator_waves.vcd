$date
	Sat Apr 20 03:18:01 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cic $end
$scope begin genblk1[1] $end
$scope module integrator_inst $end
$var wire 1 ! i_ce $end
$var wire 1 " i_clk $end
$var wire 2 # i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 % IW $end
$var parameter 32 & OW $end
$var reg 128 ' accumulator [127:0] $end
$var reg 128 ( o_data [127:0] $end
$var reg 1 ) o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[2] $end
$scope module integrator_inst $end
$var wire 1 ) i_ce $end
$var wire 1 " i_clk $end
$var wire 2 * i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 + IW $end
$var parameter 32 , OW $end
$var reg 128 - accumulator [127:0] $end
$var reg 128 . o_data [127:0] $end
$var reg 1 / o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[3] $end
$scope module integrator_inst $end
$var wire 1 / i_ce $end
$var wire 1 " i_clk $end
$var wire 2 0 i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 1 IW $end
$var parameter 32 2 OW $end
$var reg 128 3 accumulator [127:0] $end
$var reg 128 4 o_data [127:0] $end
$var reg 1 5 o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[4] $end
$scope module integrator_inst $end
$var wire 1 5 i_ce $end
$var wire 1 " i_clk $end
$var wire 2 6 i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 7 IW $end
$var parameter 32 8 OW $end
$var reg 128 9 accumulator [127:0] $end
$var reg 128 : o_data [127:0] $end
$var reg 1 ; o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[5] $end
$scope module integrator_inst $end
$var wire 1 ; i_ce $end
$var wire 1 " i_clk $end
$var wire 2 < i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 = IW $end
$var parameter 32 > OW $end
$var reg 128 ? accumulator [127:0] $end
$var reg 128 @ o_data [127:0] $end
$var reg 1 A o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[6] $end
$scope module integrator_inst $end
$var wire 1 A i_ce $end
$var wire 1 " i_clk $end
$var wire 2 B i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 C IW $end
$var parameter 32 D OW $end
$var reg 128 E accumulator [127:0] $end
$var reg 128 F o_data [127:0] $end
$var reg 1 G o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[7] $end
$scope module integrator_inst $end
$var wire 1 G i_ce $end
$var wire 1 " i_clk $end
$var wire 2 H i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 I IW $end
$var parameter 32 J OW $end
$var reg 128 K accumulator [127:0] $end
$var reg 128 L o_data [127:0] $end
$var reg 1 M o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[8] $end
$scope module integrator_inst $end
$var wire 1 M i_ce $end
$var wire 1 " i_clk $end
$var wire 2 N i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 O IW $end
$var parameter 32 P OW $end
$var reg 128 Q accumulator [127:0] $end
$var reg 128 R o_data [127:0] $end
$var reg 1 S o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk1[9] $end
$scope module integrator_inst $end
$var wire 1 S i_ce $end
$var wire 1 " i_clk $end
$var wire 2 T i_data [1:0] $end
$var wire 1 $ i_reset $end
$var parameter 32 U IW $end
$var parameter 32 V OW $end
$var reg 128 W accumulator [127:0] $end
$var reg 128 X o_data [127:0] $end
$var reg 1 Y o_ready $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[1] $end
$scope module comb_0 $end
$var wire 1 Z i_ce $end
$var wire 1 " i_clk $end
$var wire 128 [ i_data [127:0] $end
$var wire 1 \ i_reset $end
$var parameter 32 ] IW $end
$var parameter 64 ^ N $end
$var parameter 32 _ OW $end
$var reg 128 ` o_data [127:0] $end
$var reg 1 a o_ready $end
$var integer 32 b i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[2] $end
$scope module comb_0 $end
$var wire 1 a i_ce $end
$var wire 1 " i_clk $end
$var wire 128 c i_data [127:0] $end
$var wire 1 d i_reset $end
$var parameter 32 e IW $end
$var parameter 64 f N $end
$var parameter 32 g OW $end
$var reg 128 h o_data [127:0] $end
$var reg 1 i o_ready $end
$var integer 32 j i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[3] $end
$scope module comb_0 $end
$var wire 1 i i_ce $end
$var wire 1 " i_clk $end
$var wire 128 k i_data [127:0] $end
$var wire 1 l i_reset $end
$var parameter 32 m IW $end
$var parameter 64 n N $end
$var parameter 32 o OW $end
$var reg 128 p o_data [127:0] $end
$var reg 1 q o_ready $end
$var integer 32 r i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[4] $end
$scope module comb_0 $end
$var wire 1 q i_ce $end
$var wire 1 " i_clk $end
$var wire 128 s i_data [127:0] $end
$var wire 1 t i_reset $end
$var parameter 32 u IW $end
$var parameter 64 v N $end
$var parameter 32 w OW $end
$var reg 128 x o_data [127:0] $end
$var reg 1 y o_ready $end
$var integer 32 z i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[5] $end
$scope module comb_0 $end
$var wire 1 y i_ce $end
$var wire 1 " i_clk $end
$var wire 128 { i_data [127:0] $end
$var wire 1 | i_reset $end
$var parameter 32 } IW $end
$var parameter 64 ~ N $end
$var parameter 32 !" OW $end
$var reg 128 "" o_data [127:0] $end
$var reg 1 #" o_ready $end
$var integer 32 $" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[6] $end
$scope module comb_0 $end
$var wire 1 #" i_ce $end
$var wire 1 " i_clk $end
$var wire 128 %" i_data [127:0] $end
$var wire 1 &" i_reset $end
$var parameter 32 '" IW $end
$var parameter 64 (" N $end
$var parameter 32 )" OW $end
$var reg 128 *" o_data [127:0] $end
$var reg 1 +" o_ready $end
$var integer 32 ," i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[7] $end
$scope module comb_0 $end
$var wire 1 +" i_ce $end
$var wire 1 " i_clk $end
$var wire 128 -" i_data [127:0] $end
$var wire 1 ." i_reset $end
$var parameter 32 /" IW $end
$var parameter 64 0" N $end
$var parameter 32 1" OW $end
$var reg 128 2" o_data [127:0] $end
$var reg 1 3" o_ready $end
$var integer 32 4" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[8] $end
$scope module comb_0 $end
$var wire 1 3" i_ce $end
$var wire 1 " i_clk $end
$var wire 128 5" i_data [127:0] $end
$var wire 1 6" i_reset $end
$var parameter 32 7" IW $end
$var parameter 64 8" N $end
$var parameter 32 9" OW $end
$var reg 128 :" o_data [127:0] $end
$var reg 1 ;" o_ready $end
$var integer 32 <" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$scope begin genblk2[9] $end
$scope module comb_0 $end
$var wire 1 ;" i_ce $end
$var wire 1 " i_clk $end
$var wire 128 =" i_data [127:0] $end
$var wire 1 >" i_reset $end
$var parameter 32 ?" IW $end
$var parameter 64 @" N $end
$var parameter 32 A" OW $end
$var reg 128 B" o_data [127:0] $end
$var reg 1 C" o_ready $end
$var integer 32 D" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cic $end
$var wire 1 E" i_ce $end
$var wire 1 " i_clk $end
$var wire 2 F" i_data [1:0] $end
$var wire 1 $ i_reset $end
$var wire 128 G" o_data [127:0] $end
$var wire 1 H" o_ready $end
$var wire 1 I" decimator_ready $end
$var wire 128 J" decimator_data [127:0] $end
$var parameter 32 K" IW $end
$var parameter 32 L" M $end
$var parameter 32 M" OW $end
$var parameter 32 N" R $end
$scope begin genblk1[1] $end
$var parameter 2 O" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 P" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 Q" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 R" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 S" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 T" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 U" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 V" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 W" i $end
$scope module integrator_inst $end
$upscope $end
$upscope $end
$scope begin genblk2[1] $end
$var parameter 2 X" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[2] $end
$var parameter 3 Y" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[3] $end
$var parameter 3 Z" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[4] $end
$var parameter 4 [" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[5] $end
$var parameter 4 \" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[6] $end
$var parameter 4 ]" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[7] $end
$var parameter 4 ^" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[8] $end
$var parameter 5 _" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope begin genblk2[9] $end
$var parameter 5 `" j $end
$scope module comb_0 $end
$upscope $end
$upscope $end
$scope module decimator_inst $end
$var wire 1 a" i_ce $end
$var wire 1 " i_clk $end
$var wire 128 b" i_data [127:0] $end
$var wire 1 c" i_reset $end
$var parameter 32 d" R $end
$var parameter 32 e" RW $end
$var parameter 32 f" W $end
$var reg 32 g" decimator_counter [31:0] $end
$var reg 128 h" o_data [127:0] $end
$var reg 1 I" o_ready $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000000 f"
b100000 e"
b1100100 d"
b1001 `"
b1000 _"
b111 ^"
b110 ]"
b101 \"
b100 ["
b11 Z"
b10 Y"
b1 X"
b1001 W"
b1000 V"
b111 U"
b110 T"
b101 S"
b100 R"
b11 Q"
b10 P"
b1 O"
b1100100 N"
b10000000 M"
b1010 L"
b10 K"
b10000000 A"
b1 @"
b10000000 ?"
b10000000 9"
b1 8"
b10000000 7"
b10000000 1"
b1 0"
b10000000 /"
b10000000 )"
b1 ("
b10000000 '"
b10000000 !"
b1 ~
b10000000 }
b10000000 w
b1 v
b10000000 u
b10000000 o
b1 n
b10000000 m
b10000000 g
b1 f
b10000000 e
b10000000 _
b1 ^
b10000000 ]
b10000000 V
b10 U
b10000000 P
b10 O
b10000000 J
b10 I
b10000000 D
b10 C
b10000000 >
b10 =
b10000000 8
b10 7
b10000000 2
b10 1
b10000000 ,
b10 +
b10000000 &
b10 %
$end
#0
$dumpvars
bx h"
b0 g"
zc"
bz b"
za"
bx J"
xI"
zH"
bz G"
bz F"
zE"
bx D"
xC"
bx B"
z>"
bx ="
bx <"
x;"
bx :"
z6"
bx 5"
bx 4"
x3"
bx 2"
z."
bx -"
bx ,"
x+"
bx *"
z&"
bx %"
bx $"
x#"
bx ""
z|
bx {
bx z
xy
bx x
zt
bx s
bx r
xq
bx p
zl
bx k
bx j
xi
bx h
zd
bx c
bx b
xa
bx `
z\
bx [
xZ
xY
bx X
b0 W
bx T
xS
bx R
b0 Q
bx N
xM
bx L
b0 K
bx H
xG
bx F
b0 E
bx B
xA
bx @
b0 ?
bx <
x;
bx :
b0 9
bx 6
x5
bx 4
b0 3
bx 0
x/
bx .
b0 -
bx *
x)
bx (
b0 '
z$
bz #
z"
z!
$end
