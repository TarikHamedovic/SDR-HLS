/* Generated by Yosys 0.42+40 (git sha1 a739e21a5, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:13" *)
(* generator = "Amaranth" *)
module top(result, num);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire \$1 ;
  wire [10:0] \$10 ;
  wire [10:0] \$11 ;
  wire \$12 ;
  wire \$13 ;
  wire [10:0] \$14 ;
  wire [10:0] \$15 ;
  wire \$16 ;
  wire \$17 ;
  wire [10:0] \$18 ;
  wire [10:0] \$19 ;
  wire [10:0] \$2 ;
  wire \$20 ;
  wire \$21 ;
  wire [10:0] \$22 ;
  wire [10:0] \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire [10:0] \$26 ;
  wire [10:0] \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire [10:0] \$3 ;
  wire [10:0] \$30 ;
  wire [10:0] \$31 ;
  wire \$32 ;
  wire \$4 ;
  wire \$5 ;
  wire [10:0] \$6 ;
  wire [10:0] \$7 ;
  wire \$8 ;
  wire \$9 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$10 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$11 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$12 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$13 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$14 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$15 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$16 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$17 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$18 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$19 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$20 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$21 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$22 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$23 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$24 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$25 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$26 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$27 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$28 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$29 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$3 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$30 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$31 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$32 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$33 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$34 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$35 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$36 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$37 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$38 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$39 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  wire [9:0] \$signal$4 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$40 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$41 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$42 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$43 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$44 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:19" *)
  wire [9:0] \$signal$5 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:18" *)
  wire [9:0] \$signal$6 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  wire [15:0] \$signal$7 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:20" *)
  reg [9:0] \$signal$8 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  wire [7:0] \$signal$9 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:16" *)
  input [15:0] num;
  wire [15:0] num;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:17" *)
  output [7:0] result;
  wire [7:0] result;
  assign \$2  = num[15] + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) 1'h1;
  assign \$3  = num[15] - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) 1'h1;
  assign \$4  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$8 [9];
  assign \$6  = { \$signal$8 [7:0], num[13] } + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) { \$4 , \$signal$8 [9], 1'h1 };
  assign \$7  = { \$signal$8 [7:0], num[13] } - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) { \$4 , \$signal$8 [9], 1'h1 };
  assign \$8  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$13 [9];
  assign \$10  = { \$signal$13 [7:0], num[11] } + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) { \$4 , \$8 , \$signal$13 [9], 1'h1 };
  assign \$11  = { \$signal$13 [7:0], num[11] } - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) { \$4 , \$8 , \$signal$13 [9], 1'h1 };
  assign \$12  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$18 [9];
  assign \$14  = { \$signal$18 [7:0], num[9] } + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) { \$4 , \$8 , \$12 , \$signal$18 [9], 1'h1 };
  assign \$15  = { \$signal$18 [7:0], num[9] } - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) { \$4 , \$8 , \$12 , \$signal$18 [9], 1'h1 };
  assign \$16  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$23 [9];
  assign \$18  = { \$signal$23 [7:0], num[7] } + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) { \$4 , \$8 , \$12 , \$16 , \$signal$23 [9], 1'h1 };
  assign \$19  = { \$signal$23 [7:0], num[7] } - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) { \$4 , \$8 , \$12 , \$16 , \$signal$23 [9], 1'h1 };
  assign \$20  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$28 [9];
  assign \$22  = { \$signal$28 [7:0], num[5] } + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) { \$4 , \$8 , \$12 , \$16 , \$20 , \$signal$28 [9], 1'h1 };
  assign \$23  = { \$signal$28 [7:0], num[5] } - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) { \$4 , \$8 , \$12 , \$16 , \$20 , \$signal$28 [9], 1'h1 };
  assign \$24  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$33 [9];
  assign \$26  = { \$signal$33 [7:0], num[3] } + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) { \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$signal$33 [9], 1'h1 };
  assign \$27  = { \$signal$33 [7:0], num[3] } - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) { \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$signal$33 [9], 1'h1 };
  assign \$28  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$38 [9];
  assign \$30  = { \$signal$38 [7:0], num[1] } + (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:38" *) { \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$28 , \$signal$38 [9], 1'h1 };
  assign \$31  = { \$signal$38 [7:0], num[1] } - (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:40" *) { \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$28 , \$signal$38 [9], 1'h1 };
  assign \$32  = ~ (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/amaranth/sqrt.py:42" *) \$signal$43 [9];
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$1 ) begin
      \$signal$8  = \$2 [9:0];
    end else begin
      \$signal$8  = \$3 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$5 ) begin
      \$signal$13  = \$6 [9:0];
    end else begin
      \$signal$13  = \$7 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$9 ) begin
      \$signal$18  = \$10 [9:0];
    end else begin
      \$signal$18  = \$11 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$13 ) begin
      \$signal$23  = \$14 [9:0];
    end else begin
      \$signal$23  = \$15 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$17 ) begin
      \$signal$28  = \$18 [9:0];
    end else begin
      \$signal$28  = \$19 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$21 ) begin
      \$signal$33  = \$22 [9:0];
    end else begin
      \$signal$33  = \$23 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$25 ) begin
      \$signal$38  = \$26 [9:0];
    end else begin
      \$signal$38  = \$27 [9:0];
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    if (\$29 ) begin
      \$signal$43  = \$30 [9:0];
    end else begin
      \$signal$43  = \$31 [9:0];
    end
  end
  assign \$signal  = num;
  assign \$signal$3  = 8'h00;
  assign \$signal$4  = 10'h000;
  assign \$signal$5  = 10'h001;
  assign \$signal$6  = { 9'h000, num[15] };
  assign \$signal$7  = { num[13:0], 2'h0 };
  assign \$signal$9  = { 7'h00, \$4  };
  assign \$signal$10  = { 7'h00, \$4 , \$signal$8 [9], 1'h1 };
  assign \$signal$11  = { 1'h0, \$signal$8 [7:0], num[13] };
  assign \$signal$12  = { num[11:0], 4'h0 };
  assign \$signal$14  = { 6'h00, \$4 , \$8  };
  assign \$signal$15  = { 6'h00, \$4 , \$8 , \$signal$13 [9], 1'h1 };
  assign \$signal$16  = { 1'h0, \$signal$13 [7:0], num[11] };
  assign \$signal$17  = { num[9:0], 6'h00 };
  assign \$signal$19  = { 5'h00, \$4 , \$8 , \$12  };
  assign \$signal$20  = { 5'h00, \$4 , \$8 , \$12 , \$signal$18 [9], 1'h1 };
  assign \$signal$21  = { 1'h0, \$signal$18 [7:0], num[9] };
  assign \$signal$22  = { num[7:0], 8'h00 };
  assign \$signal$24  = { 4'h0, \$4 , \$8 , \$12 , \$16  };
  assign \$signal$25  = { 4'h0, \$4 , \$8 , \$12 , \$16 , \$signal$23 [9], 1'h1 };
  assign \$signal$26  = { 1'h0, \$signal$23 [7:0], num[7] };
  assign \$signal$27  = { num[5:0], 10'h000 };
  assign \$signal$29  = { 3'h0, \$4 , \$8 , \$12 , \$16 , \$20  };
  assign \$signal$30  = { 3'h0, \$4 , \$8 , \$12 , \$16 , \$20 , \$signal$28 [9], 1'h1 };
  assign \$signal$31  = { 1'h0, \$signal$28 [7:0], num[5] };
  assign \$signal$32  = { num[3:0], 12'h000 };
  assign \$signal$34  = { 2'h0, \$4 , \$8 , \$12 , \$16 , \$20 , \$24  };
  assign \$signal$35  = { 2'h0, \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$signal$33 [9], 1'h1 };
  assign \$signal$36  = { 1'h0, \$signal$33 [7:0], num[3] };
  assign \$signal$37  = { num[1:0], 14'h0000 };
  assign \$signal$39  = { 1'h0, \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$28  };
  assign \$signal$40  = { 1'h0, \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$28 , \$signal$38 [9], 1'h1 };
  assign \$signal$41  = { 1'h0, \$signal$38 [7:0], num[1] };
  assign \$signal$42  = 16'h0000;
  assign \$signal$44  = { \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$28 , \$32  };
  assign result = { \$4 , \$8 , \$12 , \$16 , \$20 , \$24 , \$28 , \$32  };
  assign \$1  = 1'h0;
  assign \$5  = \$signal$8 [9];
  assign \$9  = \$signal$13 [9];
  assign \$13  = \$signal$18 [9];
  assign \$17  = \$signal$23 [9];
  assign \$21  = \$signal$28 [9];
  assign \$25  = \$signal$33 [9];
  assign \$29  = \$signal$38 [9];
endmodule
