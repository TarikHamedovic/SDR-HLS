/* Generated by Yosys 0.42+40 (git sha1 a739e21a5, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/sequential/amaranth/amaranth_test/test.py:11" *)
(* generator = "Amaranth" *)
module top(rst, a, clk);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire \$1 ;
  wire \$2 ;
  wire \$3 ;
  reg [1:0] \$4 ;
  reg [1:0] \$5 ;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/sequential/amaranth/amaranth_test/test.py:7" *)
  output [1:0] a;
  reg [1:0] a = 2'h0;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input clk;
  wire clk;
  (* src = "/usr/lib/python3.10/contextlib.py:142" *)
  reg [1:0] fsm_state = 2'h0;
  (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_ir.py:215" *)
  input rst;
  wire rst;
  (* src = "/home/user/SDR-HLS/5.NewModules/SquareRoot/sequential/amaranth/amaranth_test/test.py:7" *)
  always @(posedge clk)
    a <= \$4 ;
  (* src = "/usr/lib/python3.10/contextlib.py:142" *)
  always @(posedge clk)
    fsm_state <= \$5 ;
  assign \$1  = ! (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_dsl.py:490" *) fsm_state;
  assign \$2  = fsm_state == (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_dsl.py:490" *) 1'h1;
  assign \$3  = fsm_state == (* src = "/home/user/FPGA/tools/amaranth/amaranth/hdl/_dsl.py:490" *) 2'h2;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$5  = fsm_state;
    casez (fsm_state)
      2'h0:
          \$5  = 2'h1;
      2'h1:
          \$5  = 2'h2;
      2'h2:
          \$5  = 2'h0;
    endcase
    if (rst) begin
      \$5  = 2'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$4  = a;
    casez (fsm_state)
      2'h0:
          \$4  = 2'h1;
      2'h1:
          \$4  = 2'h2;
      2'h2:
          \$4  = 2'h3;
    endcase
    if (rst) begin
      \$4  = 2'h0;
    end
  end
endmodule
